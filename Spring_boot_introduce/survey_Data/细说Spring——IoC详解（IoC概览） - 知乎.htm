<!DOCTYPE html>
<html data-theme="light" data-react-helmet="data-theme" style="" lang="zh"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta charset="utf-8"><title>细说Spring——IoC详解（IoC概览） - 知乎</title><meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1"><meta name="renderer" content="webkit"><meta name="force-rendering" content="webkit"><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><meta name="google-site-verification" content="FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg"><meta data-react-helmet="true" name="keywords" content="Spring,Java,Java Web"><meta data-react-helmet="true" name="description" content="一、前言 我之前写过一个专栏 Sping+SpringMVC+Mybatis学习笔记，这个专栏主是我在学习SSM的一些笔记，但是这个专栏中只讲解了怎么使用Spring框架，但是却很少涉及Spring原理性的知识，为了弥补这个不足，我决定再…"><meta data-react-helmet="true" property="og:title" content="细说Spring——IoC详解（IoC概览）"><meta data-react-helmet="true" property="og:url" content="https://zhuanlan.zhihu.com/p/36770560"><meta data-react-helmet="true" property="og:description" content="一、前言 我之前写过一个专栏 Sping+SpringMVC+Mybatis学习笔记，这个专栏主是我在学习SSM的一些笔记，但是这个专栏中只讲解了怎么使用Spring框架，但是却很少涉及Spring原理性的知识，为了弥补这个不足，我决定再…"><meta data-react-helmet="true" property="og:image" content="https://pic4.zhimg.com/v2-39eadb15806d1a29c6f9e73e0ca27c87_720w.jpg?source=172ae18b"><meta data-react-helmet="true" property="og:type" content="article"><meta data-react-helmet="true" property="og:site_name" content="知乎专栏"><link data-react-helmet="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.a53ae37b.png"><link data-react-helmet="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-152.a53ae37b.png" sizes="152x152"><link data-react-helmet="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-120.bbce8f18.png" sizes="120x120"><link data-react-helmet="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-76.cbade8f9.png" sizes="76x76"><link data-react-helmet="true" rel="apple-touch-icon" href="https://static.zhihu.com/heifetz/assets/apple-touch-icon-60.8f6c52aa.png" sizes="60x60"><link crossorigin="" rel="shortcut icon" type="image/x-icon" href="https://static.zhihu.com/heifetz/favicon.ico"><link crossorigin="" rel="search" type="application/opensearchdescription+xml" href="https://static.zhihu.com/heifetz/search.xml" title="知乎"><link rel="dns-prefetch" href="https://static.zhimg.com/"><link rel="dns-prefetch" href="https://pic1.zhimg.com/"><link rel="dns-prefetch" href="https://pic2.zhimg.com/"><link rel="dns-prefetch" href="https://pic3.zhimg.com/"><link rel="dns-prefetch" href="https://pic4.zhimg.com/"><style>
.u-safeAreaInset-top {
  height: constant(safe-area-inset-top) !important;
  height: env(safe-area-inset-top) !important;
  
}
.u-safeAreaInset-bottom {
  height: constant(safe-area-inset-bottom) !important;
  height: env(safe-area-inset-bottom) !important;
  
}
</style><link href="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column_006.css" crossorigin="" rel="stylesheet"><script defer="defer" crossorigin="anonymous" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/init.js" data-sentry-config="{&quot;dsn&quot;:&quot;https://2d8d764432cc4f6fb3bc78ab9528299d@crash2.zhihu.com/1224&quot;,&quot;sampleRate&quot;:0.1,&quot;release&quot;:&quot;2403-0069b201&quot;,&quot;ignoreErrorNames&quot;:[&quot;NetworkError&quot;,&quot;SecurityError&quot;],&quot;ignoreErrorsPreset&quot;:&quot;ReactApp&quot;,&quot;whitelistUrls&quot;:[&quot;static.zhihu.com&quot;]}"></script><style data-emotion-css="1cd9gw4">.css-1cd9gw4{margin-left:.3em;}</style><style data-emotion-css="qbubgm">.css-qbubgm{margin-left:0;}</style><script charset="utf-8" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column_008.js" crossorigin="anonymous"></script><link rel="stylesheet" type="text/css" href="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column_008.css" crossorigin="anonymous"><script charset="utf-8" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column.js" crossorigin="anonymous"></script><link rel="stylesheet" type="text/css" href="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column_005.css" crossorigin="anonymous"><script charset="utf-8" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column_003.js" crossorigin="anonymous"></script><link rel="stylesheet" type="text/css" href="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column_004.css" crossorigin="anonymous"><script charset="utf-8" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column_007.js" crossorigin="anonymous"></script><link rel="stylesheet" type="text/css" href="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column_007.css" crossorigin="anonymous"><script charset="utf-8" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column_005.js" crossorigin="anonymous"></script><link rel="stylesheet" type="text/css" href="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column_003.css" crossorigin="anonymous"><script charset="utf-8" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column_009.js" crossorigin="anonymous"></script><style data-emotion="css"></style><link rel="stylesheet" type="text/css" href="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column.css" crossorigin="anonymous"><script charset="utf-8" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column_006.js" crossorigin="anonymous"></script><link rel="stylesheet" type="text/css" href="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column_002.css" crossorigin="anonymous"><script charset="utf-8" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column_002.js" crossorigin="anonymous"></script></head><body class="WhiteBg-body" data-react-helmet="class"><div id="root"><div class="App"><div class="LoadingBar"></div><main role="main" class="App-main"><div class="Post-content" data-zop-usertoken="{&quot;userToken&quot;:&quot;&quot;}" data-zop="{&quot;authorName&quot;:&quot;4944&quot;,&quot;itemId&quot;:36770560,&quot;title&quot;:&quot;细说Spring——IoC详解（IoC概览）&quot;,&quot;type&quot;:&quot;article&quot;}" data-za-detail-view-path-module="PostItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Post&quot;,&quot;token&quot;:&quot;36770560&quot;}}}"><div class="ColumnPageHeader-Wrapper"><div><div class="Sticky ColumnPageHeader is-fixed" style="width: 1681px; top: 0px; left: 0px;"><div class="ColumnPageHeader-content"><a href="https://www.zhihu.com/" aria-label="知乎"><svg viewBox="0 0 64 30" fill="#0066FF" width="64" height="30"><path d="M29.05 4.582H16.733V25.94h3.018l.403 2.572 4.081-2.572h4.815V4.582zm-5.207 18.69l-2.396 1.509-.235-1.508h-1.724V7.233h6.78v16.04h-2.425zM14.46 14.191H9.982c0-.471.033-.954.039-1.458v-5.5h5.106V5.935a1.352 1.352 0 0 0-.404-.957 1.378 1.378 0 0 0-.968-.396H5.783c.028-.088.056-.177.084-.255.274-.82 1.153-3.326 1.153-3.326a4.262 4.262 0 0 0-2.413.698c-.57.4-.912.682-1.371 1.946-.532 1.453-.997 2.856-1.31 3.693C1.444 8.674.28 11.025.28 11.025a5.85 5.85 0 0 0 2.52-.61c1.119-.593 1.679-1.502 2.054-2.883l.09-.3h2.334v5.5c0 .5-.045.982-.073 1.46h-4.12c-.71 0-1.39.278-1.893.775a2.638 2.638 0 0 0-.783 1.874h6.527a17.717 17.717 0 0 1-.778 3.649 16.796 16.796 0 0 1-3.012 5.273A33.104 33.104 0 0 1 0 28.74s3.13 1.175 5.425-.954c1.388-1.292 2.631-3.814 3.23-5.727a28.09 28.09 0 0 0 1.12-5.229h5.967v-1.37a1.254 1.254 0 0 0-.373-.899 1.279 1.279 0 0 0-.909-.37z"></path><path d="M11.27 19.675l-2.312 1.491 5.038 7.458a6.905 6.905 0 0 0 .672-2.218 3.15 3.15 0 0 0-.28-2.168l-3.118-4.563zM51.449 15.195V5.842c4.181-.205 7.988-.405 9.438-.483l.851-.05c.387-.399.885-2.395.689-3.021-.073-.25-.213-.666-.638-.555a33.279 33.279 0 0 1-4.277.727c-2.766.321-3.97.404-7.804.682-6.718.487-12.709.72-12.709.72a2.518 2.518 0 0 0 .788 1.834 2.567 2.567 0 0 0 1.883.706c2.278-.095 5.598-.25 8.996-.41v9.203h-12.78c0 .703.281 1.377.783 1.874a2.69 2.69 0 0 0 1.892.777h10.105v7.075c0 .887-.464 1.192-1.231 1.214h-3.92a4.15 4.15 0 0 0 .837 1.544 4.2 4.2 0 0 0 1.403 1.067 6.215 6.215 0 0 0 2.71.277c1.36-.066 2.967-.826 2.967-3.57v-7.607h11.28c.342 0 .67-.135.91-.374.242-.239.378-.563.378-.902v-1.375H51.449z"></path><path d="M42.614 8.873a2.304 2.304 0 0 0-1.508-.926 2.334 2.334 0 0 0-1.727.405l-.376.272 4.255 5.85 2.24-1.62-2.884-3.98zM57.35 8.68l-3.125 4.097 2.24 1.663 4.517-5.927-.375-.277a2.32 2.32 0 0 0-1.722-.452 2.327 2.327 0 0 0-1.536.896z"></path></svg></a><i class="ColumnPageHeader-Line"></i><div class="ColumnPageHeader-Title"><div class="ColumnPageHeader-TitleName"><span class="ColumnPageHeader-TitleMeta">首发于</span><a class="ColumnLink ColumnPageHeader-TitleColumn" href="https://www.zhihu.com/column/c_189111429">细说Spring</a></div></div><div class="ColumnPageHeader-Button"><button type="button" class="Button ColumnPageHeader-WriteButton Button--blue"><svg class="Zi Zi--EditSurround" fill="currentColor" viewBox="0 0 24 24" width="24" height="24"><path d="M4 6a2 2 0 0 1 2-2h5.75a.25.25 0 0 1 .25.25v1.5a.25.25 0 0 1-.25.25h-5.5a.25.25 0 0 0-.25.25v11.5c0 .138.112.25.25.25h11.5a.25.25 0 0 0 .25-.25v-5.5a.25.25 0 0 1 .25-.25h1.5a.25.25 0 0 1 .25.25V18a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6z" fill-rule="evenodd" clip-rule="evenodd"></path><path d="M18.293 1.293a1 1 0 0 1 1.414 0l3 3a1 1 0 0 1 0 1.414l-10 10A1 1 0 0 1 12 16H9a1 1 0 0 1-1-1v-3a1 1 0 0 1 .293-.707l10-10zm-8.22 11.048a.25.25 0 0 0-.073.177v1.232c0 .138.112.25.25.25h1.232a.25.25 0 0 0 .177-.073l8.75-8.75a.25.25 0 0 0 0-.354l-1.232-1.232a.25.25 0 0 0-.354 0l-8.75 8.75z" fill-rule="evenodd" clip-rule="evenodd"></path></svg>写文章</button></div></div></div><div class="Sticky--holder" style="position: relative; inset: 0px; display: block; float: none; margin: 0px; height: 52px;"></div></div></div><img class="TitleImage" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/v2-39eadb15806d1a29c6f9e73e0ca27c87_1440w.jpg" alt="细说Spring——IoC详解（IoC概览）"><article class="Post-Main Post-NormalMain" tabindex="-1"><header class="Post-Header"><h1 class="Post-Title">细说Spring——IoC详解（IoC概览）</h1><div class="Post-Author"><div class="AuthorInfo" itemprop="author" itemscope="" itemtype="http://schema.org/Person"><meta itemprop="name" content="4944"><meta itemprop="image" content="https://pic1.zhimg.com/v2-cf8b37d31060e3a39e2af00bd5825910_l.jpg?source=172ae18b"><meta itemprop="url" content="https://www.zhihu.com/people/jia-yifan-13-98"><meta itemprop="zhihu:followerCount"><span class="UserLink AuthorInfo-avatarWrapper"><div class="Popover"><div id="Popover8-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover8-content"><a target="_blank" class="UserLink-link" data-za-detail-view-element_name="User" href="https://www.zhihu.com/people/jia-yifan-13-98"><img class="Avatar Avatar--round AuthorInfo-avatar" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/v2-cf8b37d31060e3a39e2af00bd5825910_xs.jpg" srcset="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/v2-cf8b37d31060e3a39e2af00bd5825910_l.jpg 2x" alt="4944" width="38" height="38"></a></div></div></span><div class="AuthorInfo-content"><div class="AuthorInfo-head"><span class="UserLink AuthorInfo-name"><div class="Popover"><div id="Popover9-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover9-content"><a target="_blank" class="UserLink-link" data-za-detail-view-element_name="User" href="https://www.zhihu.com/people/jia-yifan-13-98">4944</a></div></div></span></div><div class="AuthorInfo-detail"><div class="AuthorInfo-badge"><div class="ztext AuthorInfo-badgeText">http://blog.csdn.net/q982151756?ref=toolbar</div></div></div></div></div></div><div class="LabelContainer-wrapper"></div><div><span class="Voters"><button type="button" class="Button Button--plain">26 人<!-- -->赞同了该文章</button></span></div></header><div class="Post-RichTextContainer"><div class="RichText ztext Post-RichText"><h2>一、前言<br></h2><p>我之前写过一个专栏<a href="https://link.zhihu.com/?target=https%3A//blog.csdn.net/column/details/20348.html" class=" wrap external" target="_blank" rel="nofollow noreferrer" data-za-detail-view-id="1043">Sping+SpringMVC+Mybatis学习笔记</a>，这个专栏主是我在学习<code>SSM</code>的一些笔记，但是这个专栏中只讲解了怎么使用<code>Spring</code>框架，但是却很少涉及<code>Spring</code>原理性的知识，为了弥补这个不足，我决定再开一个专栏，专门记录我对<code>Spring</code>原理性知识的了解，希望能够帮助<code>Spring</code>的初学者快速建立起对<code>Spring</code>框架的认知。<br><b>这里的很多知识都是通过阅读《Spring揭秘》和Spring官方文档总结而来，这里也着重推荐一下《Spring揭秘》这本书，这本书让我对Spring框架的理解有了很大的提高。</b></p><p class="ztext-empty-paragraph"><br></p><h2>二、IoC思想</h2><p class="ztext-empty-paragraph"><br></p><p>首先想说说<code>IoC</code>（I<code>nversion of Control</code>，控制倒转）。这是<code>spring</code>的核心，贯穿始终。所谓<code>IoC</code>，对于<code>spring</code>框架来说，就是由<code>spring</code>来
负责控制对象的生命周期和对象间的关系。这是什么意思呢，举个简单的例子，我们是如何找女朋友的？常见的情况是，我们到处去看哪里有长得漂亮身材又好的
mm，然后打听她们的兴趣爱好、qq号、电话号、ip号、iq号………，想办法认识她们，投其所好送其所要，然后嘿嘿……这个过程是复杂深奥的，我们必须
自己设计和面对每个环节。传统的程序开发也是如此，在一个对象中，如果要使用另外的对象，就必须得到它（自己<code>new</code>一个，或者从<code>JNDI</code>中查询一个），使用完之后还要将对象销毁（比如<code>Connection</code>等），对象始终会和其他的接口或类藕合起来。 </p><p>那么<code>IoC</code>是
如何做的呢？有点像通过婚介找女朋友，在我和女朋友之间引入了一个第三者：婚姻介绍所。婚介管理了很多男男女女的资料，我可以向婚介提出一个列表，告诉它
我想找个什么样的女朋友，比如长得像李嘉欣，身材像林熙雷，唱歌像周杰伦，速度像卡洛斯，技术像齐达内之类的，然后婚介就会按照我们的要求，提供一个
mm，我们只需要去和她谈恋爱、结婚就行了。简单明了，如果婚介给我们的人选不符合要求，我们就会抛出异常。整个过程不再由我自己控制，而是有婚介这样一
个类似容器的机构来控制。<code>Spring</code>所倡导的开发方式就是如此，所有的类都会在<code>spring</code>容器中登记，告诉<code>spring</code>你是个什么东西，你需要什么东西，然后<code>spring</code>会在系统运行到适当的时候，把你要的东西主动给你，同时也把你交给其他需要你的东西。所有的类的创建、销毁都由<code>spring</code>来控制，也就是说控制对象生存周期的不再是引用它的对象，而是<code>spring</code>。对于某个具体的对象而言，以前是它控制其他对象，现在是所有对象都被<code>spring</code>控制，所以这叫控制反转。</p><p><code>IoC</code>的一个重点是在系统运行中，动态的向某个对象提供它所需要的其他对象。这一点是通过<code>DI</code>（<code>Dependency Injection</code>，依赖注入）来实现的。比如<code>对象A</code>需要操作数据库，以前我们总是要在<code>A</code>中自己编写代码来获得一个<code>Connection</code>对象，有了 <code>spring</code>我们就只需要告诉<code>spring</code>，<code>A</code>中需要一个<code>Connection</code>，至于这个<code>Connection</code>怎么构造，何时构造，<code>A</code>不需要知道。在系统运行时，<code>spring</code>会在适当的时候制造一个<code>Connection</code>，然后像打针一样，注射到<code>A</code>当中，这样就完成了对各个对象之间关系的控制。<code>A</code>需要依赖 <code>Connection</code>才能正常运行，而这个<code>Connection</code>是由<code>spring</code>注入到<code>A</code>中的，依赖注入的名字就这么来的。</p><p class="ztext-empty-paragraph"><br></p><h2>三、Spring IoC总览</h2><p class="ztext-empty-paragraph"><br></p><p><code>Spring</code>的<code>IoC</code>容器在实现控制反转和依赖注入的过程中,可以划分为两个阶段:</p><ul><li>容器启动阶段</li><li><code>Bean</code>实例化阶段</li></ul><p>这两个阶段中,<code>IoC</code>容器分别作了以下这些事情:<br></p><figure data-size="normal"><noscript><img src="https://pic4.zhimg.com/v2-71478cd38e5710fc538f5dd4a88eb69b_b.jpg" data-caption="" data-size="normal" data-rawwidth="533" data-rawheight="316" class="origin_image zh-lightbox-thumb" width="533" data-original="https://pic4.zhimg.com/v2-71478cd38e5710fc538f5dd4a88eb69b_r.jpg"/></noscript><img src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/v2-71478cd38e5710fc538f5dd4a88eb69b_720w.jpg" data-caption="" data-size="normal" data-rawwidth="533" data-rawheight="316" class="origin_image zh-lightbox-thumb lazy" data-original="https://pic4.zhimg.com/v2-71478cd38e5710fc538f5dd4a88eb69b_r.jpg" data-actualsrc="https://pic4.zhimg.com/v2-71478cd38e5710fc538f5dd4a88eb69b_b.jpg" data-lazy-status="ok" width="533"></figure><p><br>这里可能会完全搞不懂上面这些东西是什么,不过不要紧,这里只是给大家一个基本的印象,知道<code>Spring</code>的<code>IoC</code>容器在实现控制反转和依赖注入功能的时候不是一蹴而就的,也分了两个阶段,并且大致对两个阶段所做的事情有一个印象,下面我要对每一个阶段的每一项工作都进行深入的讲解,请大家耐心的看下去.</p><p class="ztext-empty-paragraph"><br></p><h2>四、容器启动阶段的讲解</h2><p class="ztext-empty-paragraph"><br></p><h2>1、IOC的技术实现方式</h2><p class="ztext-empty-paragraph"><br></p><p>“伙计，来杯啤酒！”当你来到酒吧，想要喝杯啤酒的时候，通常会直接招呼服务生，让他为你送来一杯清凉解渴的啤酒。同样地，作为被注入对象，要想让<code>IoC容器</code>为其提供服务，并<br>将所需要的被依赖对象送过来，也需要通过某种方式通知对方。</p><ul><li>如果你是酒吧的常客，或许你刚坐好，服务生已经将你最常喝的啤酒放到了你面前</li><li>如果你是初次或偶尔光顾，也许你坐下之后还要招呼服务生，<code>“Waiter,Tsingdao, please.”</code> </li><li>还有一种可能，你根本就不知道哪个牌子是哪个牌子，这时，你只能打手势或干脆画出商标图来告诉服务生你到底想要什么了吧！ </li></ul><p>不管怎样，你终究会找到一种方式来向服务生表达你的需求，以便他为你提供适当的服务。那么，在<code>IoC</code>模式中，被注入对象又是通过哪些方式来通知<code>IoC容器</code>为其提供适当服务的呢?<br>常用的有两种方式：构造方法注入和<code>setter</code>方法注入，还有一种已经退出历史舞台的接口注入方式，下面就比较一下三种注入方式：</p><ul><li>接口注入。从注入方式的使用上来说，接口注入是现在不甚提倡的一种方式，基本处于“退役状态”。因为它强制被注入对象实现不必要的接口，带有侵入性。而构造方法注入和<code>setter</code>方法注入则不需要如此。</li><li>构
造方法注入。这种注入方式的优点就是，对象在构造完成之后，即已进入就绪状态，可以 
马上使用。缺点就是，当依赖对象比较多的时候，构造方法的参数列表会比较长。而通过反射构造对象的时候，对相同类型的参数的处理会比较困难，维护和使用上
也比较麻烦。而且在Java中，构造方法无法被继承，无法设置默认值。对于非必须的依赖处理，可能需要引入多个构造方法，而参数数量的变动可能造成维护上
的不便。</li><li><code>setter</code>方法注入。因为方法可以命名，所以<code>setter</code>方法注入在描述性上要比构造方法注入好一些。 另外，<code>setter</code>方法可以被继承，允许设置默认值，而且有良好的<code>IDE</code>支持。缺点当然就是对象无法在构造完成后马上进入就绪状态。</li></ul><p>其实，这些操作都是由<code>IoC</code>容器来做的，我们所要做的，就是调用<code>IoC</code>容器来获得对象而已。</p><p class="ztext-empty-paragraph"><br></p><h2>2、IoC容器及IoC容器如何获取对象间的依赖关系</h2><p class="ztext-empty-paragraph"><br></p><p><code>Spring</code>中提供了两种<code>IoC</code>容器：</p><ul><li><code>BeanFactory</code> </li><li><code>ApplicationContext</code> </li></ul><p>这两个容器间的关系如下图：<br></p><figure data-size="normal"><noscript><img src="https://pic3.zhimg.com/v2-cb227f19e5c0926edb0c63bbcaed9786_b.jpg" data-caption="" data-size="normal" data-rawwidth="696" data-rawheight="222" class="origin_image zh-lightbox-thumb" width="696" data-original="https://pic3.zhimg.com/v2-cb227f19e5c0926edb0c63bbcaed9786_r.jpg"/></noscript><img src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/v2-cb227f19e5c0926edb0c63bbcaed9786_720w.jpg" data-caption="" data-size="normal" data-rawwidth="696" data-rawheight="222" class="origin_image zh-lightbox-thumb lazy" data-original="https://pic3.zhimg.com/v2-cb227f19e5c0926edb0c63bbcaed9786_r.jpg" data-actualsrc="https://pic3.zhimg.com/v2-cb227f19e5c0926edb0c63bbcaed9786_b.jpg" data-lazy-status="ok" width="696"></figure><p><br>我们可以看到，<code>ApplicationContext</code>是<code>BeanFactory</code>的子类，所以，<code>ApplicationContext</code>可以看做更强大的<code>BeanFactory</code>，他们两个之间的区别如下：</p><ul><li><code>BeanFactory</code>。基础类型<code>IoC容器</code>，提供完整的<code>IoC</code>服务支持。如果没有特殊指定，默认采用延迟初始化策略（<code>lazy-load</code>）。只有当客户端对象需要访问容器中的某个受管对象的时候，才对该受管对象进行初始化以及依赖注入操作。所以，相对来说，容器启动初期速度较快，所需要的资源有限。对于资源有限，并且功能要求不是很严格的场景，<code>BeanFactory</code>是比较合适的<code>IoC容器</code>选择。</li><li><code>ApplicationContext</code>。<code>ApplicationContext</code>在<code>BeanFactory</code>的基础上构建，是相对比较高级的容器实现，除了拥有<code>BeanFactory</code>的所有支持，<code>ApplicationContext</code>还提供了其他高级特性，比如事件发布、国际化信息支持等，<code>ApplicationContext</code>所管理的对象，在该类型容器启动之后，默认全部初始化并绑定完成。所以，相对于<code>BeanFactory</code>来说，<code>ApplicationContext</code>要求更多的系统资源，同时，因为在启动时就完成所有初始化，容<br>器启动时间较之<code>BeanFactory</code>也会长一些。在那些系统资源充足，并且要求更多功能的场景中，<code>ApplicationContext</code>类型的容器是比较合适的选择。</li></ul><p>但
是我们无论使用哪个容器，我们都需要通过某种方法告诉容器关于对象依赖的信息，只有这样，容器才能合理的创造出对象，否则，容器自己也不知道哪个对象依赖
哪个对象，如果胡乱注入，那不是创造出一个四不像。理论上将我们可以通过任何方式来告诉容器对象依赖的信息，比如我们可以通过语音告诉他，但是并没有人实
现这样的代码，所以我们还是老老实实使用<code>Spring</code>提供的方法吧：</p><ul><li>通过最基本的文本文件来记录被注入对象和其依赖对象之间的对应关系</li><li>通过描述性较强的XML文件格式来记录对应信息</li><li>通过编写代码的方式来注册这些对应信息</li><li>通过注解方式来注册这些对应信息</li></ul><p>虽然提供了四种方式，但是我们一般只使用<code>xml</code>文件方式和注解方式，所以，就重点讲解这两种方式。</p><p class="ztext-empty-paragraph"><br></p><h2>3、万里长征第一步：加载配置文件信息</h2><p>我们在介绍了一些基本的概念后，终于要迎来容器创造对象的第一步，那就是加载配置文件信息，我们已经知道我们主要通过<code>xml</code>文件和注解的方式来告诉容器对象间的依赖信息，那么容器怎么才能从<code>xml</code>配置文件中得到对象依赖的信息呢？且听我慢慢道来。<b>（这里的容器指的是<code>BeanFactory</code>，至于<code>ApplicationContext</code>，以后会有相应的讲解）</b></p><p>在<code>BeanFactory</code>容器中，每一个注入对象都对应一个<code>BeanDefinition</code>实例对象，该实例对象负责保存注入对象的所有必要信息，包括其对应的对象的class类型、是否是抽象类、构造方法参数以及其他属性等。当客户端向<code>BeanFactory</code>请求相应对象的时候，<code>BeanFactory</code>会通过这些信息为客户端返回一个完备可用的对象实例。</p><p>那么<code>BeanDefinition</code>实例对象的信息是从哪而来呢？这里就要引出一个专门加载解析配置文件的类了，他就是<code>BeanDefinitionReader</code>，对应到<code>xml</code>配置文件，就是他的子类<code>XmlBeanDefinitionReader</code>，<code>XmlBeanDefinitionReader</code>负责读取<code>Spring</code>指定格式的<code>XML</code>配置文件并解析，之后将解析后的文件内容映射到相应的<code>BeanDefinition</code>。在我们了解了怎么得到对象依赖的信息，并知道这些信息最终保存在<code>BeanDefinition</code>之后，我们可能会想，那么容器怎么通过这些信息创造出一个可用的对象了呢？</p><p class="ztext-empty-paragraph"><br></p><h2>4、笼统讲解容器中对象的创建和获取</h2><p>我们把容器创造一个对象的过程称为<code>Bean的注册</code>，实现<code>Bean的注册</code>的接口是<code>BeanDefinitionRegistry</code>，其实<code>BeanFactory</code>只是一个接口，他定义了如何获取容器内对象的方法，我们所说的<code>BeanFactory</code>容器，其实是这个接口的是实现类，但是具体的<code>BeanFactory</code>实现类同时也会实现<code>BeanDefinitionRegistry</code>接口，这样我们才能通过容器注册对象和获取对象。我们通过<code>BeanDefinitionRegistry</code>的<code>rsgisterBeanDefinition(BeanDefinition beandefinition)</code>方法来进行<code>Bean的注册</code>。</p><p>打个比方说，<code>BeanDefinitionRegistry</code>就像图书馆的书架，所有的书是放在书架上的。虽然你还书或者借书都是跟图书馆（也就是<code>BeanFactory</code>）打交道，但书架才是图书馆存放各类图书的地方。所以，书架相对于图书馆来说，就是它的<code>BeanDefinitionRegistry</code>。</p><p>下面是<code>BeanFactory</code>、<code>BeanDefinitionRegistry</code>以及<code>DefaultListableBeanFactory</code>（一个具体的容器）的关系图：<br></p><figure data-size="normal"><noscript><img src="https://pic2.zhimg.com/v2-c74db74e7f39338a447b71c1061b00f1_b.jpg" data-caption="" data-size="normal" data-rawwidth="683" data-rawheight="214" class="origin_image zh-lightbox-thumb" width="683" data-original="https://pic2.zhimg.com/v2-c74db74e7f39338a447b71c1061b00f1_r.jpg"/></noscript><img src="data:image/svg+xml;utf8,&lt;svg xmlns='http://www.w3.org/2000/svg' width='683' height='214'&gt;&lt;/svg&gt;" data-caption="" data-size="normal" data-rawwidth="683" data-rawheight="214" class="origin_image zh-lightbox-thumb lazy" data-original="https://pic2.zhimg.com/v2-c74db74e7f39338a447b71c1061b00f1_r.jpg" data-actualsrc="https://pic2.zhimg.com/v2-c74db74e7f39338a447b71c1061b00f1_b.jpg" width="683"></figure><p class="ztext-empty-paragraph"><br></p><p>好了，我们来总结一下一个<code>Bean</code>是如何注册到容器中，然后被我们获取的：<br>首先我们需要配置该<code>Bean</code>的依赖信息，通常我们配置在<code>xml</code>文件中，然后我们通过<code>XmlBeanDefinitionReader</code>读取文件内容，然后将文件内容映射到相应的<code>BeanDefinition</code>，然后我们可以通过<code>BeanFactory</code>和<code>BeanDefinitionRegistry</code>的具体实现类,比如<code>DefaultListableBeanFactory</code>实现<code>Bean</code>的注册和获取。这里放一段代码来演示一下这个过程：</p><div class="highlight"><pre><code class="language-text">public static void main(String[] args)
{
    //创建一个容器
     DefaultListableBeanFactory beanRegistry = new DefaultListableBeanFactory();
     //调用方法实现Bean的注册
     BeanFactory container = (BeanFactory)bindViaCode(beanRegistry);
     //通过容器获取对象
     FXNewsProvider newsProvider =  (FXNewsProvider)container.getBean("djNewsProvider");
}
public static BeanFactory bindViaCode(BeanDefinitionRegistry registry)
{
     AbstractBeanDefinition newsProvider = new RootBeanDefinition(FXNewsProvider.class,true);

     AbstractBeanDefinition newsListener = new RootBeanDefinition(DowJonesNewsListener.class,true);

     AbstractBeanDefinition newsPersister = new RootBeanDefinition(DowJonesNewsPersister.class,true);

     // 将bean定义注册到容器中
     registry.registerBeanDefinition("djNewsProvider", newsProvider);
     registry.registerBeanDefinition("djListener", newsListener);
     registry.registerBeanDefinition("djPersister", newsPersister);
     // 指定依赖关系
     // 1. 可以通过构造方法注入方式
     ConstructorArgumentValues argValues = new ConstructorArgumentValues();
     argValues.addIndexedArgumentValue(0, newsListener);
     argValues.addIndexedArgumentValue(1, newsPersister);
     newsProvider.setConstructorArgumentValues(argValues);
     // 2. 或者通过setter方法注入方式
     MutablePropertyValues propertyValues = new MutablePropertyValues();
     propertyValues.addPropertyValue(new ropertyValue("newsListener",newsListener));
     propertyValues.addPropertyValue(new PropertyValue("newPersistener",newsPersister));
     newsProvider.setPropertyValues(propertyValues);
     // 绑定完成
     return (BeanFactory)registry;
} 
</code></pre></div><p class="ztext-empty-paragraph"><br></p><p class="ztext-empty-paragraph"><br></p><p><b>第一篇博客就先讲到这里，第二篇博客将继续讲解Spring中的IoC原理</b></p></div></div><div class="ContentItem-time">编辑于 2018-05-22</div><div class="Post-topicsAndReviewer"><div class="TopicList Post-Topics"><div class="Tag Topic" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;19599516&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/19599516" target="_blank"><div class="Popover"><div id="Popover1-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover1-content">Spring</div></div></a></span></div><div class="Tag Topic" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;19561132&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/19561132" target="_blank"><div class="Popover"><div id="Popover2-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover2-content">Java</div></div></a></span></div><div class="Tag Topic" data-za-detail-view-path-module="TopicItem" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Topic&quot;,&quot;token&quot;:&quot;19622819&quot;}}}"><span class="Tag-content"><a class="TopicLink" href="https://www.zhihu.com/topic/19622819" target="_blank"><div class="Popover"><div id="Popover3-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover3-content">Java Web</div></div></a></span></div></div></div><div><div class="Sticky RichContent-actions is-fixed is-bottom" style="width: 690px; bottom: 0px; left: 495.5px;"><div class="ContentItem-actions" data-za-detail-view-path-module="BottomBar" data-za-extra-module="{&quot;card&quot;:{&quot;content&quot;:{&quot;type&quot;:&quot;Post&quot;,&quot;id&quot;:&quot;36770560&quot;}}}"><span><button aria-label="赞同 26 " type="button" class="Button VoteButton VoteButton--up"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--TriangleUp VoteButton-TriangleUp" fill="currentColor" viewBox="0 0 24 24" width="10" height="10"><path d="M2 18.242c0-.326.088-.532.237-.896l7.98-13.203C10.572 3.57 11.086 3 12 3c.915 0 1.429.571 1.784 1.143l7.98 13.203c.15.364.236.57.236.896 0 1.386-.875 1.9-1.955 1.9H3.955c-1.08 0-1.955-.517-1.955-1.9z" fill-rule="evenodd"></path></svg></span>赞同 26</button><button aria-label="反对" type="button" class="Button VoteButton VoteButton--down"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--TriangleDown" fill="currentColor" viewBox="0 0 24 24" width="10" height="10"><path d="M20.044 3H3.956C2.876 3 2 3.517 2 4.9c0 .326.087.533.236.896L10.216 19c.355.571.87 1.143 1.784 1.143s1.429-.572 1.784-1.143l7.98-13.204c.149-.363.236-.57.236-.896 0-1.386-.876-1.9-1.956-1.9z" fill-rule="evenodd"></path></svg></span></button></span><div class="css-qbubgm"><button type="button" class="Button BottomActions-CommentBtn Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Comment Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M10.241 19.313a.97.97 0 0 0-.77.2 7.908 7.908 0 0 1-3.772 1.482.409.409 0 0 1-.38-.637 5.825 5.825 0 0 0 1.11-2.237.605.605 0 0 0-.227-.59A7.935 7.935 0 0 1 3 11.25C3 6.7 7.03 3 12 3s9 3.7 9 8.25-4.373 9.108-10.759 8.063z" fill-rule="evenodd"></path></svg></span>2 条评论</button></div><div class="Popover ShareMenu"><div class="ShareMenu-toggler" id="Popover4-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover4-content"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Share Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M2.931 7.89c-1.067.24-1.275 1.669-.318 2.207l5.277 2.908 8.168-4.776c.25-.127.477.198.273.39L9.05 14.66l.927 5.953c.18 1.084 1.593 1.376 2.182.456l9.644-15.242c.584-.892-.212-2.029-1.234-1.796L2.93 7.89z" fill-rule="evenodd"></path></svg></span>分享</button></div></div><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Heart Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M2 8.437C2 5.505 4.294 3.094 7.207 3 9.243 3 11.092 4.19 12 6c.823-1.758 2.649-3 4.651-3C19.545 3 22 5.507 22 8.432 22 16.24 13.842 21 12 21 10.158 21 2 16.24 2 8.437z" fill-rule="evenodd"></path></svg></span>喜欢</button><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Star Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M5.515 19.64l.918-5.355-3.89-3.792c-.926-.902-.639-1.784.64-1.97L8.56 7.74l2.404-4.871c.572-1.16 1.5-1.16 2.072 0L15.44 7.74l5.377.782c1.28.186 1.566 1.068.64 1.97l-3.89 3.793.918 5.354c.219 1.274-.532 1.82-1.676 1.218L12 18.33l-4.808 2.528c-1.145.602-1.896.056-1.677-1.218z" fill-rule="evenodd"></path></svg></span>收藏</button><button type="button" class="Button ContentItem-action Button--plain Button--withIcon Button--withLabel"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Deliver Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M5.171 4H18.83a1.5 1.5 0 0 1 1.455 1.136l2.597 10.386a4 4 0 0 1 .119.97V19s0 2-2.002 2H3c-2 0-2-2-2-2v-2.508a4 4 0 0 1 .12-.97L3.715 5.136A1.5 1.5 0 0 1 5.171 4zm1.074 2a1 1 0 0 0-.97.761l-2.123 8.62a.5.5 0 0 0 .486.619h4.717a1 1 0 0 1 .892.548C9.906 17.85 10.824 18.5 12 18.5c1.176 0 2.094-.65 2.753-1.952a1 1 0 0 1 .892-.548h4.717a.5.5 0 0 0 .486-.62l-2.122-8.619A1 1 0 0 0 17.755 6H6.245zM8 9c0-.552.453-1 .997-1h6.006c.55 0 .997.444.997 1 0 .552-.453 1-.997 1H8.997A.996.996 0 0 1 8 9zm-1.5 4c0-.552.445-1 .996-1h9.008c.55 0 .996.444.996 1 0 .552-.445 1-.996 1H7.496a.995.995 0 0 1-.996-1z"></path></svg></span>申请转载</button><div class="Post-ActionMenuButton"><div class="Popover"><div id="Popover5-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover5-content"><button type="button" class="Button Button--plain Button--withIcon Button--iconOnly"><span style="display:inline-flex;align-items:center">​<svg class="Zi Zi--Dots Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M5 14a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm7 0a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm7 0a2 2 0 1 1 0-4 2 2 0 0 1 0 4z" fill-rule="evenodd"></path></svg></span></button></div></div></div></div><div style="opacity: 1;" class="Post-SideActions"><button class="like"><div class="Post-SideActions-icon"><svg class="Zi Zi--TriangleUp Post-SideActions-upIcon" fill="currentColor" viewBox="0 0 24 24" width="16" height="16"><path d="M2 18.242c0-.326.088-.532.237-.896l7.98-13.203C10.572 3.57 11.086 3 12 3c.915 0 1.429.571 1.784 1.143l7.98 13.203c.15.364.236.57.236.896 0 1.386-.875 1.9-1.955 1.9H3.955c-1.08 0-1.955-.517-1.955-1.9z" fill-rule="evenodd"></path></svg></div><div class="likeCount"><div class="likeCount-inner" data-previous="已赞同 27">赞同 26</div></div></button><div class="Popover ShareMenu"><div class="ShareMenu-toggler" id="Popover16-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover16-content"><button><div class="Post-SideActions-icon"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Share" fill="currentColor" viewBox="0 0 24 24" width="20" height="20"><path d="M2.931 7.89c-1.067.24-1.275 1.669-.318 2.207l5.277 2.908 8.168-4.776c.25-.127.477.198.273.39L9.05 14.66l.927 5.953c.18 1.084 1.593 1.376 2.182.456l9.644-15.242c.584-.892-.212-2.029-1.234-1.796L2.93 7.89z" fill-rule="evenodd"></path></svg></span></div>分享</button></div></div></div></div><div class="Sticky--holder" style="position: static; inset: auto auto 0px 0px; display: block; float: none; margin: 0px 0px 10px; height: 54px;"></div></div></article><div class="Post-Sub Post-NormalSub"><div class="PostIndex-Contributions" data-za-detail-view-path-module="ColumnList" data-za-detail-view-path-module_name="文章被以下专栏收录" data-za-extra-module="{}"><h3 class="BlockTitle">文章被以下专栏收录</h3><ul><div class="ContentItem Column-ColumnItem"><div class="ContentItem-main"><div class="ContentItem-image"><a class="ColumnLink" href="https://www.zhihu.com/column/c_189111429"><div class="Popover"><div id="Popover6-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover6-content"><img class="Avatar Avatar--medium Avatar--round" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/v2-e3f5e691688bfbb11ec0cdf543597ab2_xs.jpg" srcset="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/v2-e3f5e691688bfbb11ec0cdf543597ab2_l.jpg 2x" alt="细说Spring" width="40" height="40"></div></div></a></div><div class="ContentItem-head"><h2 class="ContentItem-title"><a class="ColumnLink ColumnItem-Title" href="https://www.zhihu.com/column/c_189111429"><div class="Popover"><div id="Popover7-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover7-content">细说Spring</div></div></a></h2><div class="ContentItem-meta">细致的讲解Spring。</div></div></div></div></ul></div><div class="Recommendations-Main" style="width: 1681px;"><h3 class="BlockTitle Recommendations-BlockTitle">推荐阅读</h3><ul class="Recommendations-List"><button class="PagingButton PagingButton-Previous" disabled="disabled" data-za-detail-view-path-module="Unknown" data-za-detail-view-path-module_name="推荐阅读" data-za-extra-module="{}"><svg class="Zi Zi--ArrowLeft" fill="#d3d3d3" viewBox="0 0 24 24" width="40" height="40"><path d="M14.782 16.78a.737.737 0 0 1-1.052 0L9.218 12.53a.758.758 0 0 1 0-1.063L13.73 7.22a.737.737 0 0 1 1.052 0c.29.294.29.77.001 1.063L11 12l3.782 3.716c.29.294.29.77 0 1.063z" fill-rule="evenodd"></path></svg></button><a href="https://zhuanlan.zhihu.com/p/47649591" class="PostItem"><div><h1 class="PostItem-Title">谈谈对Spring IOC的理解</h1><p class="PostItem-Summary">学习过Spring框架的人一定都会听过Spring的IoC(控制反转) 、DI(依赖注入)这两个概念，对于初学Spring的人来说，总觉得IoC 、DI这两个概念是模糊不清的，是很难理解的，今天和大家分享网上的…</p><div class="PostItem-Footer"><span>TD李</span><span class="PostItem-FooterTitle"></span></div></div></a><a href="https://zhuanlan.zhihu.com/p/293250583" class="PostItem"><div><h1 class="PostItem-Title">详解Spring工作原理</h1><p class="PostItem-Summary">1、spring原理内部最核心的就是 IOC了，动态注入，让一个对象的创建不用new了，可以自动的生产，这其实就是利用java里的反射，反射其实就是在运行时动态的去创建、调用对象，Spring就是在运…</p><div class="PostItem-Footer"><span>平凡的java梦</span><span class="PostItem-FooterTitle"></span></div></div></a><a href="https://zhuanlan.zhihu.com/p/89220249" class="PostItem"><div><h1 class="PostItem-Title">谈谈对Spring IOC的理解（转载）</h1><p class="PostItem-Summary">学习过Spring框架的人一定都会听过Spring的IoC(控制反转) 、DI(依赖注入)这两个概念，对于初学Spring的人来说，总觉得IoC 、DI这两个概念是模糊不清的，是很难理解的，今天和大家分享网上的…</p><div class="PostItem-Footer"><span>dai</span><span class="PostItem-FooterTitle"></span></div></div></a><a href="https://zhuanlan.zhihu.com/p/68207621" class="PostItem"><div><h1 class="PostItem-Title">Spring系列之IOC的原理及手动实现</h1><p class="PostItem-Summary">导语Spring是一个分层的JavaSE/EE full-stack(一站式) 轻量级开源框架。也是几乎所有Java工作者必须要掌握的框架之一，其优秀的设计思想以及其代码实现上的艺术也是我们需要掌握的。要学习S…</p><div class="PostItem-Footer"><span>宁愿</span><span class="PostItem-FooterTitle"></span></div></div></a><button class="PagingButton PagingButton-Next" data-za-detail-view-path-module="Unknown" data-za-detail-view-path-module_name="推荐阅读" data-za-extra-module="{}"><svg class="Zi Zi--ArrowRight" fill="#d3d3d3" viewBox="0 0 24 24" width="40" height="40"><path d="M9.218 16.78a.737.737 0 0 0 1.052 0l4.512-4.249a.758.758 0 0 0 0-1.063L10.27 7.22a.737.737 0 0 0-1.052 0 .759.759 0 0 0-.001 1.063L13 12l-3.782 3.716a.758.758 0 0 0 0 1.063z" fill-rule="evenodd"></path></svg></button></ul></div><div class="Comments-container" data-za-detail-view-path-module="CommentList" data-za-extra-module="{}"><div class="CommentsV2 CommentsV2--withEditor CommentsV2-withPagination"><div class="Topbar CommentTopbar"><div class="Topbar-title"><h2 class="CommentTopbar-title">2 条评论</h2></div><div class="Topbar-options"><button type="button" class="Button Button--plain Button--withIcon Button--withLabel"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Switch Button-zi" fill="currentColor" viewBox="0 0 24 24" width="1.2em" height="1.2em"><path d="M13.004 7V4.232c0-.405.35-.733.781-.733.183 0 .36.06.501.17l6.437 5.033c.331.26.376.722.1 1.033a.803.803 0 0 1-.601.264H2.75a.75.75 0 0 1-.75-.75V7.75A.75.75 0 0 1 2.75 7h10.254zm-1.997 9.999v2.768c0 .405-.35.733-.782.733a.814.814 0 0 1-.5-.17l-6.437-5.034a.702.702 0 0 1-.1-1.032.803.803 0 0 1 .6-.264H21.25a.75.75 0 0 1 .75.75v1.499a.75.75 0 0 1-.75.75H11.007z" fill-rule="evenodd"></path></svg></span>切换为时间排序</button></div></div><div><div class="CommentsV2-footer CommentEditorV2--normal"><div class="CommentEditorV2-inputWrap"><div class="InputLike CommentEditorV2-input Editable"><div style="min-height: 198px;" class="Dropzone Editable-content RichText RichText--editable RichText--clearBoth ztext"><div class="DraftEditor-root"><div class="public-DraftEditorPlaceholder-root"><div class="public-DraftEditorPlaceholder-inner" id="placeholder-fvesm" style="white-space: pre-wrap;">写下你的评论...</div></div><div class="DraftEditor-editorContainer"><div aria-describedby="placeholder-fvesm" class="notranslate public-DraftEditor-content" role="textbox" spellcheck="true" style="outline: currentcolor none medium; user-select: text; white-space: pre-wrap; overflow-wrap: break-word;" tabindex="0" contenteditable="true"><div data-contents="true"><div class="Editable-unstyled" data-block="true" data-editor="fvesm" data-offset-key="bkhgc-0-0"><div data-offset-key="bkhgc-0-0" class="public-DraftStyleDefault-block public-DraftStyleDefault-ltr"><span data-offset-key="bkhgc-0-0"><br data-text="true"></span></div></div></div></div></div></div></div><input multiple="" type="file" style="display: none;" accept="image/webp,image/jpg,image/jpeg,image/png,image/gif"><div></div></div><div class="CommentEditorV2-inputUpload"><div class="CommentEditorV2-popoverWrap"><div class="Popover ImagePopover"><button aria-label="插入图片" data-tooltip="插入图片" data-tooltip-position="bottom" data-tooltip-will-hide-on-click="true" id="Popover11-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover11-content" type="button" class="Button Editable-control Button--plain"><svg class="Zi Zi--AddImage" fill="currentColor" viewBox="0 0 24 24" width="24" height="24"><path d="M13.25 5.5H6.868c-.755 0-1.368.613-1.368 1.368v10.264c0 .755.613 1.368 1.368 1.368h10.264c.755 0 1.368-.613 1.368-1.368V10.75H20v6.467A2.783 2.783 0 0 1 17.217 20H6.783A2.783 2.783 0 0 1 4 17.217V6.783A2.783 2.783 0 0 1 6.783 4h6.467v1.5zM8.158 13.4a1.033 1.033 0 0 1 1.744-.078l.258.37a.782.782 0 0 0 1.303-.031l1.332-2.113a1.173 1.173 0 0 1 2.01.043l2.03 3.537A1.25 1.25 0 0 1 15.748 17H8.25a1.252 1.252 0 0 1-1.085-1.873l.992-1.728zM9.5 11a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm3.75-5.5a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5zM18.5 4V2.25a.75.75 0 1 1 1.5 0V4h1.75a.75.75 0 1 1 0 1.5H20v1.75a.75.75 0 1 1-1.5 0V5.5h-1.75a.75.75 0 1 1 0-1.5h1.75zm.75 7.5a.75.75 0 1 1 0-1.5.75.75 0 0 1 0 1.5z"></path></svg><svg width="21" height="14" class="css-agjc5i" fill="none"><path fill="url(#A)" stroke="#f6f6f6" d="M7.486.504a6 6 0 100 12h7a6 6 0 100-12h-7z"></path><g fill="#935d14"><path d="M8.459 9.431l2.465-5.366h-.916L8.401 7.751l-1.6-3.687h-.923L8.35 9.431h.109zm3.825 0V4.065h-.814v5.366h.814zm2.05 0V7.445h.284c.659 0 1.156-.153 1.491-.46s.502-.747.502-1.321c0-.496-.154-.887-.462-1.172s-.794-.427-1.458-.427h-1.178v5.366h.822zm.305-2.708h-.305V4.78h.378c.388 0 .664.09.829.27s.247.414.247.701c0 .268-.085.496-.254.686s-.468.285-.894.285z" fill-rule="evenodd"></path><path d="M8.459 9.431v.146h.094l.039-.085-.133-.061zm2.465-5.366l.133.061.095-.207h-.228v.146zm-.916 0v-.146h-.096l-.038.088.134.058zM8.401 7.751l-.134.058.134.309.134-.309-.134-.058zm-1.6-3.687l.134-.058-.038-.088h-.096v.146zm-.923 0v-.146h-.229l.096.208.133-.061zM8.35 9.431l-.133.061.039.085h.094v-.146zm3.934 0v.146h.146v-.146h-.146zm0-5.366h.146v-.146h-.146v.146zm-.814 0v-.146h-.146v.146h.146zm0 5.366h-.146v.146h.146v-.146zm2.865 0v.146h.146v-.146h-.146zm0-1.986v-.146h-.146v.146h.146zm-.822-3.38v-.146h-.146v.146h.146zm0 5.366h-.146v.146h.146v-.146zm.822-2.708h-.146v.146h.146v-.146zm0-1.942v-.146h-.146v.146h.146zM8.592 9.492l2.465-5.366-.266-.122L8.326 9.37l.266.122zm2.332-5.573h-.916v.293h.916v-.293zm-1.05.088L8.267 7.693l.268.117 1.607-3.687-.268-.117zM8.535 7.693l-1.6-3.687-.269.116 1.6 3.687.268-.116zM6.801 3.918h-.923v.293h.923v-.293zm-1.056.208l2.472 5.366.266-.122-2.472-5.366-.266.122zM8.35 9.577h.109v-.293H8.35v.293zm4.08-.146V4.065h-.293v5.366h.293zm-.146-5.512h-.814v.293h.814v-.293zm-.961.146v5.366h.293V4.065h-.293zm.146 5.512h.814v-.293h-.814v.293zm3.011-.146V7.445h-.293v1.986h.293zm-.146-1.839h.284v-.293h-.284v.293zm.284 0c.68 0 1.218-.158 1.589-.498l-.198-.216c-.297.273-.753.421-1.392.421v.293zm1.589-.498c.372-.341.549-.826.549-1.429h-.293c0 .545-.158.942-.454 1.214l.198.216zm.549-1.429c0-.529-.166-.962-.509-1.279l-.199.215c.272.252.415.6.415 1.064h.293zm-.509-1.279c-.347-.321-.877-.466-1.557-.466v.293c.648 0 1.09.14 1.358.388l.199-.215zM14.69 3.92h-1.178v.293h1.178V3.92zm-1.324.146v5.366h.293V4.065h-.293zm.146 5.512h.822v-.293h-.822v.293zm1.127-3.001h-.305v.293h.305v-.293zm-.159.146V4.78h-.293v1.942h.293zm-.146-1.796h.378v-.293h-.378v.293zm.378 0c.37 0 .597.087.721.223l.216-.198c-.205-.224-.532-.318-.937-.318v.293zm.721.223c.136.148.209.345.209.602h.293c0-.317-.092-.588-.286-.8l-.216.198zm.209.602a.85.85 0 01-.217.589l.218.195a1.14 1.14 0 00.292-.784h-.293zm-.217.589c-.128.143-.373.236-.785.236v.293c.441 0 .792-.097 1.003-.334l-.218-.195z"></path></g><defs><linearGradient id="A" x1="1.986" x2="19.986" y1="12.004" y2="12.004" gradientUnits="userSpaceOnUse"><stop stop-color="#f8e2c4"></stop><stop offset="1" stop-color="#f3bb6c"></stop></linearGradient></defs></svg></button></div><label class="UploadPicture-wrapper"><input type="file" accept="image/png,image/jpeg" class="UploadPicture-input"></label><div class="Popover"><div id="Popover12-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover12-content" class="css-ltqpv7"></div></div><div class="Popover"><button aria-label="插入表情" data-tooltip="插入表情" data-tooltip-position="bottom" data-tooltip-will-hide-on-click="true" id="Popover13-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover13-content" type="button" class="Button Editable-control Button--plain"><svg class="Zi Zi--Emotion" fill="currentColor" viewBox="0 0 24 24" width="24" height="24"><path d="M7.523 13.5h8.954c-.228 2.47-2.145 4-4.477 4-2.332 0-4.25-1.53-4.477-4zM12 21a9 9 0 1 1 0-18 9 9 0 0 1 0 18zm0-1.5a7.5 7.5 0 1 0 0-15 7.5 7.5 0 0 0 0 15zm-3-8a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3zm6 0a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z"></path></svg></button></div></div></div></div><button type="button" disabled="disabled" class="Button CommentEditorV2-singleButton Button--primary Button--blue">发布</button></div></div><div><div class="CommentListV2"><ul class="NestComment"><li class="NestComment--rootCommentNoChild"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><div class="Popover"><div id="Popover17-toggle" aria-haspopup="true" aria-expanded="false" aria-owns="Popover17-content"><a target="_blank" class="UserLink-link" data-za-detail-view-element_name="User" href="https://www.zhihu.com/people/liang-kk-35"><img class="Avatar UserLink-avatar" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/bbc8ef08659aa52892d6ec844d8bbc53_s.jpg" srcset="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/bbc8ef08659aa52892d6ec844d8bbc53_xs.jpg 2x" alt="梁kk" width="24" height="24"></a></div></div></span><span class="UserLink"><a target="_blank" class="UserLink-link" data-za-detail-view-element_name="User" href="https://www.zhihu.com/people/liang-kk-35">梁kk</a></span><span class="CommentItemV2-time">2019-01-30</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext"><p>特别赞，讲得很专业，原理清楚，明白很多</p></div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" style="margin-right: 5px;" fill="currentColor" viewBox="0 0 24 24" width="16" height="16"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>赞</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" style="margin-right: 5px;" fill="currentColor" viewBox="0 0 24 24" width="16" height="16"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" style="transform: rotate(180deg); margin-right: 5px;" fill="currentColor" viewBox="0 0 24 24" width="16" height="16"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="14" height="14"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span> 举报</button></div></div></div></div></li></ul><ul class="NestComment"><li class="NestComment--rootCommentNoChild"><div class="CommentItemV2"><div><div class="CommentItemV2-meta"><span class="UserLink CommentItemV2-avatar"><img class="Avatar UserLink-avatar" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/da8e974dc_s.jpg" srcset="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/da8e974dc_xs.jpg 2x" alt="知乎用户" width="24" height="24"></span><span class="UserLink">知乎用户</span><span class="CommentItemV2-time">2018-05-14</span></div><div class="CommentItemV2-metaSibling"><div class="CommentRichText CommentItemV2-content"><div class="RichText ztext">为啥没人评论呀，是屏蔽了么</div></div><div class="CommentItemV2-footer"><button type="button" class="Button CommentItemV2-likeBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" style="margin-right: 5px;" fill="currentColor" viewBox="0 0 24 24" width="16" height="16"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>1</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Reply" style="margin-right: 5px;" fill="currentColor" viewBox="0 0 24 24" width="16" height="16"><path d="M22.959 17.22c-1.686-3.552-5.128-8.062-11.636-8.65-.539-.053-1.376-.436-1.376-1.561V4.678c0-.521-.635-.915-1.116-.521L1.469 10.67a1.506 1.506 0 0 0-.1 2.08s6.99 6.818 7.443 7.114c.453.295 1.136.124 1.135-.501V17a1.525 1.525 0 0 1 1.532-1.466c1.186-.139 7.597-.077 10.33 2.396 0 0 .396.257.536.257.892 0 .614-.967.614-.967z" fill-rule="evenodd"></path></svg></span>回复</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Like" style="transform: rotate(180deg); margin-right: 5px;" fill="currentColor" viewBox="0 0 24 24" width="16" height="16"><path d="M14.445 9h5.387s2.997.154 1.95 3.669c-.168.51-2.346 6.911-2.346 6.911s-.763 1.416-2.86 1.416H8.989c-1.498 0-2.005-.896-1.989-2v-7.998c0-.987.336-2.032 1.114-2.639 4.45-3.773 3.436-4.597 4.45-5.83.985-1.13 3.2-.5 3.037 2.362C15.201 7.397 14.445 9 14.445 9zM3 9h2a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V10a1 1 0 0 1 1-1z" fill-rule="evenodd"></path></svg></span>踩</button><button type="button" class="Button CommentItemV2-hoverBtn Button--plain"><span style="display: inline-flex; align-items: center;">​<svg class="Zi Zi--Report" fill="currentColor" viewBox="0 0 24 24" width="14" height="14"><path d="M19.947 3.129c-.633.136-3.927.639-5.697.385-3.133-.45-4.776-2.54-9.949-.888-.997.413-1.277 1.038-1.277 2.019L3 20.808c0 .3.101.54.304.718a.97.97 0 0 0 .73.304c.275 0 .519-.102.73-.304.202-.179.304-.418.304-.718v-6.58c4.533-1.235 8.047.668 8.562.864 2.343.893 5.542.008 6.774-.657.397-.178.596-.474.596-.887V3.964c0-.599-.42-.972-1.053-.835z" fill-rule="evenodd"></path></svg></span> 举报</button></div></div></div></div></li></ul></div></div></div></div></div></div></main><div class="CornerButtons"><div class="CornerAnimayedFlex"><button data-tooltip="回到顶部" data-tooltip-position="left" data-tooltip-will-hide-on-click="true" aria-label="回到顶部" type="button" class="Button CornerButton Button--plain"><svg class="Zi Zi--BackToTop" aria-label="回到顶部" fill="currentColor" viewBox="0 0 24 24" width="24" height="24"><path d="M16.036 19.59a1 1 0 0 1-.997.995H9.032a.996.996 0 0 1-.997-.996v-7.005H5.03c-1.1 0-1.36-.633-.578-1.416L11.33 4.29a1.003 1.003 0 0 1 1.412 0l6.878 6.88c.782.78.523 1.415-.58 1.415h-3.004v7.005z"></path></svg></button></div></div></div></div><script id="js-clientConfig" type="text/json">{"host":"zhihu.com","protocol":"https:","wwwHost":"www.zhihu.com","videoHost":"video.zhihu.com","fetchRoot":{"www":"https:\u002F\u002Fwww.zhihu.com","api":"https:\u002F\u002Fapi.zhihu.com","lens":"https:\u002F\u002Flens.zhihu.com","zhuanlan":"https:\u002F\u002Fzhuanlan.zhihu.com","walletpay":"https:\u002F\u002Fwalletpay.zhihu.com","captcha":"https:\u002F\u002Fcaptcha.zhihu.com"}}</script><script id="js-initialData" type="text/json">{"initialState":{"common":{"ask":{}},"loading":{"global":{"count":0},"local":{"env\u002FgetIpinfo\u002F":false,"article\u002Fget\u002F":false,"brand\u002FgetUrl\u002F":false}},"club":{"tags":{},"admins":{"data":[]},"members":{"data":[]},"explore":{"candidateSyncClubs":{}},"profile":{},"checkin":{},"comments":{"paging":{},"loading":{},"meta":{},"ids":{}},"postList":{"paging":{},"loading":{},"ids":{}},"recommend":{"data":[]},"silences":{"data":[]},"application":{"profile":null}},"entities":{"users":{"jia-yifan-13-98":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-cf8b37d31060e3a39e2af00bd5825910.jpg?source=172ae18b","uid":"696759544344244224","userType":"people","isFollowing":false,"urlToken":"jia-yifan-13-98","id":"58053e53d23066a20b93bd4491d1f666","description":"一个考上研究生的研0学生","name":"4944","isAdvertiser":false,"headline":"http:\u002F\u002Fblog.csdn.net\u002Fq982151756?ref=toolbar","gender":1,"url":"\u002Fpeople\u002F58053e53d23066a20b93bd4491d1f666","avatarUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-cf8b37d31060e3a39e2af00bd5825910_l.jpg?source=172ae18b","isOrg":false,"type":"people","levelInfo":{"exp":45907,"level":6,"nicknameColor":{"color":"","nightModeColor":""},"levelIcon":"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-4a3a25e3b2a871617ac0e3185a93dc14_l.png","iconInfo":{"url":"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-4a3a25e3b2a871617ac0e3185a93dc14_l.png","nightModeUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-92beb29b03851affbd2e8114805460cb_l.png","width":93,"height":51}},"badge":[],"badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""},"exposedMedal":{"medalId":"1124316222665379841","medalName":"我的知乎 2019","avatarUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-2592b0b52e1fac99f69b38e00252413b_r.png?source=172ae18b","miniAvatarUrl":"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-ad363cc3088dc8de7544fd08b1c4987a_l.png?source=172ae18b","description":"参与「我的知乎 2019」即可获得"}}},"questions":{},"answers":{},"articles":{"36770560":{"trackUrl":["https:\u002F\u002Fsugar.zhihu.com\u002Fplutus_adreaper\u002Fcontent_monitor_log?si=__SESSIONID__&ti=__ATOKEN__&at=view&pf=__OS__&ed=BiBUKF0xBSkqGGJ-QhvjYHlDBQ==&idfa=__IDFA__&imei=__IMEI__&androidid=__ANDROIDID__&oaid=__OAID__&ci=__CREATIVEID__&zid=__ZONEID__"],"id":36770560,"title":"细说Spring——IoC详解（IoC概览）","type":"article","articleType":"normal","excerptTitle":"","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F36770560","imageUrl":"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-39eadb15806d1a29c6f9e73e0ca27c87_720w.jpg?source=172ae18b","titleImage":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-39eadb15806d1a29c6f9e73e0ca27c87_720w.jpg?source=172ae18b","excerpt":"\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-34d5902507f138921f5bc952dc6b1af9_200x112.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"533\" data-rawheight=\"316\" data-watermark=\"watermark\" data-original-src=\"v2-34d5902507f138921f5bc952dc6b1af9\" data-watermark-src=\"v2-71478cd38e5710fc538f5dd4a88eb69b\" data-private-watermark-src=\"\" class=\"origin_image inline-img zh-lightbox-thumb\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-34d5902507f138921f5bc952dc6b1af9_r.jpg\"\u002F\u003E一、前言 我之前写过一个专栏 \u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Fblog.csdn.net\u002Fcolumn\u002Fdetails\u002F20348.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003ESping+SpringMVC+Mybatis学习笔记\u003C\u002Fa\u003E，这个专栏主是我在学习SSM的一些笔记，但是这个专栏中只讲解了怎么使用Spring框架，但是却很少涉及Spring原理性的知识，为了弥补这个不足，我决定再开一个专栏，专门记录我对Spring原理性知识…","created":1526118338,"updated":1526968445,"author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-cf8b37d31060e3a39e2af00bd5825910.jpg?source=172ae18b","uid":"696759544344244224","userType":"people","isFollowing":false,"urlToken":"jia-yifan-13-98","id":"58053e53d23066a20b93bd4491d1f666","description":"一个考上研究生的研0学生","name":"4944","isAdvertiser":false,"headline":"http:\u002F\u002Fblog.csdn.net\u002Fq982151756?ref=toolbar","gender":1,"url":"\u002Fpeople\u002F58053e53d23066a20b93bd4491d1f666","avatarUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-cf8b37d31060e3a39e2af00bd5825910_l.jpg?source=172ae18b","isOrg":false,"type":"people","levelInfo":{"exp":45907,"level":6,"nicknameColor":{"color":"","nightModeColor":""},"levelIcon":"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-4a3a25e3b2a871617ac0e3185a93dc14_l.png","iconInfo":{"url":"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-4a3a25e3b2a871617ac0e3185a93dc14_l.png","nightModeUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-92beb29b03851affbd2e8114805460cb_l.png","width":93,"height":51}},"badge":[],"badgeV2":{"title":"","mergedBadges":[],"detailBadges":[],"icon":"","nightIcon":""},"exposedMedal":{"medalId":"1124316222665379841","medalName":"我的知乎 2019","avatarUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-2592b0b52e1fac99f69b38e00252413b_r.png?source=172ae18b","miniAvatarUrl":"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-ad363cc3088dc8de7544fd08b1c4987a_l.png?source=172ae18b","description":"参与「我的知乎 2019」即可获得"}},"commentPermission":"all","copyrightPermission":"need_review","state":"published","imageWidth":2520,"imageHeight":934,"content":"\u003Ch2\u003E一、前言\u003Cbr\u002F\u003E\u003C\u002Fh2\u003E\u003Cp\u003E我之前写过一个专栏\u003Ca href=\"https:\u002F\u002Flink.zhihu.com\u002F?target=https%3A\u002F\u002Fblog.csdn.net\u002Fcolumn\u002Fdetails\u002F20348.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\"\u003ESping+SpringMVC+Mybatis学习笔记\u003C\u002Fa\u003E，这个专栏主是我在学习\u003Ccode\u003ESSM\u003C\u002Fcode\u003E的一些笔记，但是这个专栏中只讲解了怎么使用\u003Ccode\u003ESpring\u003C\u002Fcode\u003E框架，但是却很少涉及\u003Ccode\u003ESpring\u003C\u002Fcode\u003E原理性的知识，为了弥补这个不足，我决定再开一个专栏，专门记录我对\u003Ccode\u003ESpring\u003C\u002Fcode\u003E原理性知识的了解，希望能够帮助\u003Ccode\u003ESpring\u003C\u002Fcode\u003E的初学者快速建立起对\u003Ccode\u003ESpring\u003C\u002Fcode\u003E框架的认知。\u003Cbr\u002F\u003E\u003Cb\u003E这里的很多知识都是通过阅读《Spring揭秘》和Spring官方文档总结而来，这里也着重推荐一下《Spring揭秘》这本书，这本书让我对Spring框架的理解有了很大的提高。\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Ch2\u003E二、IoC思想\u003C\u002Fh2\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp\u003E首先想说说\u003Ccode\u003EIoC\u003C\u002Fcode\u003E（I\u003Ccode\u003Enversion of Control\u003C\u002Fcode\u003E，控制倒转）。这是\u003Ccode\u003Espring\u003C\u002Fcode\u003E的核心，贯穿始终。所谓\u003Ccode\u003EIoC\u003C\u002Fcode\u003E，对于\u003Ccode\u003Espring\u003C\u002Fcode\u003E框架来说，就是由\u003Ccode\u003Espring\u003C\u002Fcode\u003E来负责控制对象的生命周期和对象间的关系。这是什么意思呢，举个简单的例子，我们是如何找女朋友的？常见的情况是，我们到处去看哪里有长得漂亮身材又好的mm，然后打听她们的兴趣爱好、qq号、电话号、ip号、iq号………，想办法认识她们，投其所好送其所要，然后嘿嘿……这个过程是复杂深奥的，我们必须自己设计和面对每个环节。传统的程序开发也是如此，在一个对象中，如果要使用另外的对象，就必须得到它（自己\u003Ccode\u003Enew\u003C\u002Fcode\u003E一个，或者从\u003Ccode\u003EJNDI\u003C\u002Fcode\u003E中查询一个），使用完之后还要将对象销毁（比如\u003Ccode\u003EConnection\u003C\u002Fcode\u003E等），对象始终会和其他的接口或类藕合起来。 \u003C\u002Fp\u003E\u003Cp\u003E那么\u003Ccode\u003EIoC\u003C\u002Fcode\u003E是如何做的呢？有点像通过婚介找女朋友，在我和女朋友之间引入了一个第三者：婚姻介绍所。婚介管理了很多男男女女的资料，我可以向婚介提出一个列表，告诉它我想找个什么样的女朋友，比如长得像李嘉欣，身材像林熙雷，唱歌像周杰伦，速度像卡洛斯，技术像齐达内之类的，然后婚介就会按照我们的要求，提供一个mm，我们只需要去和她谈恋爱、结婚就行了。简单明了，如果婚介给我们的人选不符合要求，我们就会抛出异常。整个过程不再由我自己控制，而是有婚介这样一个类似容器的机构来控制。\u003Ccode\u003ESpring\u003C\u002Fcode\u003E所倡导的开发方式就是如此，所有的类都会在\u003Ccode\u003Espring\u003C\u002Fcode\u003E容器中登记，告诉\u003Ccode\u003Espring\u003C\u002Fcode\u003E你是个什么东西，你需要什么东西，然后\u003Ccode\u003Espring\u003C\u002Fcode\u003E会在系统运行到适当的时候，把你要的东西主动给你，同时也把你交给其他需要你的东西。所有的类的创建、销毁都由\u003Ccode\u003Espring\u003C\u002Fcode\u003E来控制，也就是说控制对象生存周期的不再是引用它的对象，而是\u003Ccode\u003Espring\u003C\u002Fcode\u003E。对于某个具体的对象而言，以前是它控制其他对象，现在是所有对象都被\u003Ccode\u003Espring\u003C\u002Fcode\u003E控制，所以这叫控制反转。\u003C\u002Fp\u003E\u003Cp\u003E\u003Ccode\u003EIoC\u003C\u002Fcode\u003E的一个重点是在系统运行中，动态的向某个对象提供它所需要的其他对象。这一点是通过\u003Ccode\u003EDI\u003C\u002Fcode\u003E（\u003Ccode\u003EDependency Injection\u003C\u002Fcode\u003E，依赖注入）来实现的。比如\u003Ccode\u003E对象A\u003C\u002Fcode\u003E需要操作数据库，以前我们总是要在\u003Ccode\u003EA\u003C\u002Fcode\u003E中自己编写代码来获得一个\u003Ccode\u003EConnection\u003C\u002Fcode\u003E对象，有了 \u003Ccode\u003Espring\u003C\u002Fcode\u003E我们就只需要告诉\u003Ccode\u003Espring\u003C\u002Fcode\u003E，\u003Ccode\u003EA\u003C\u002Fcode\u003E中需要一个\u003Ccode\u003EConnection\u003C\u002Fcode\u003E，至于这个\u003Ccode\u003EConnection\u003C\u002Fcode\u003E怎么构造，何时构造，\u003Ccode\u003EA\u003C\u002Fcode\u003E不需要知道。在系统运行时，\u003Ccode\u003Espring\u003C\u002Fcode\u003E会在适当的时候制造一个\u003Ccode\u003EConnection\u003C\u002Fcode\u003E，然后像打针一样，注射到\u003Ccode\u003EA\u003C\u002Fcode\u003E当中，这样就完成了对各个对象之间关系的控制。\u003Ccode\u003EA\u003C\u002Fcode\u003E需要依赖 \u003Ccode\u003EConnection\u003C\u002Fcode\u003E才能正常运行，而这个\u003Ccode\u003EConnection\u003C\u002Fcode\u003E是由\u003Ccode\u003Espring\u003C\u002Fcode\u003E注入到\u003Ccode\u003EA\u003C\u002Fcode\u003E中的，依赖注入的名字就这么来的。\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Ch2\u003E三、Spring IoC总览\u003C\u002Fh2\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Ccode\u003ESpring\u003C\u002Fcode\u003E的\u003Ccode\u003EIoC\u003C\u002Fcode\u003E容器在实现控制反转和依赖注入的过程中,可以划分为两个阶段:\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E容器启动阶段\u003C\u002Fli\u003E\u003Cli\u003E\u003Ccode\u003EBean\u003C\u002Fcode\u003E实例化阶段\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E这两个阶段中,\u003Ccode\u003EIoC\u003C\u002Fcode\u003E容器分别作了以下这些事情:\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-71478cd38e5710fc538f5dd4a88eb69b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"533\" data-rawheight=\"316\" class=\"origin_image zh-lightbox-thumb\" width=\"533\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-71478cd38e5710fc538f5dd4a88eb69b_r.jpg\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;533&#39; height=&#39;316&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"533\" data-rawheight=\"316\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"533\" data-original=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-71478cd38e5710fc538f5dd4a88eb69b_r.jpg\" data-actualsrc=\"https:\u002F\u002Fpic4.zhimg.com\u002Fv2-71478cd38e5710fc538f5dd4a88eb69b_b.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003E\u003Cbr\u002F\u003E这里可能会完全搞不懂上面这些东西是什么,不过不要紧,这里只是给大家一个基本的印象,知道\u003Ccode\u003ESpring\u003C\u002Fcode\u003E的\u003Ccode\u003EIoC\u003C\u002Fcode\u003E容器在实现控制反转和依赖注入功能的时候不是一蹴而就的,也分了两个阶段,并且大致对两个阶段所做的事情有一个印象,下面我要对每一个阶段的每一项工作都进行深入的讲解,请大家耐心的看下去.\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Ch2\u003E四、容器启动阶段的讲解\u003C\u002Fh2\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Ch2\u003E1、IOC的技术实现方式\u003C\u002Fh2\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp\u003E“伙计，来杯啤酒！”当你来到酒吧，想要喝杯啤酒的时候，通常会直接招呼服务生，让他为你送来一杯清凉解渴的啤酒。同样地，作为被注入对象，要想让\u003Ccode\u003EIoC容器\u003C\u002Fcode\u003E为其提供服务，并\u003Cbr\u002F\u003E将所需要的被依赖对象送过来，也需要通过某种方式通知对方。\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E如果你是酒吧的常客，或许你刚坐好，服务生已经将你最常喝的啤酒放到了你面前\u003C\u002Fli\u003E\u003Cli\u003E如果你是初次或偶尔光顾，也许你坐下之后还要招呼服务生，\u003Ccode\u003E“Waiter,Tsingdao, please.”\u003C\u002Fcode\u003E \u003C\u002Fli\u003E\u003Cli\u003E还有一种可能，你根本就不知道哪个牌子是哪个牌子，这时，你只能打手势或干脆画出商标图来告诉服务生你到底想要什么了吧！ \u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E不管怎样，你终究会找到一种方式来向服务生表达你的需求，以便他为你提供适当的服务。那么，在\u003Ccode\u003EIoC\u003C\u002Fcode\u003E模式中，被注入对象又是通过哪些方式来通知\u003Ccode\u003EIoC容器\u003C\u002Fcode\u003E为其提供适当服务的呢?\u003Cbr\u002F\u003E常用的有两种方式：构造方法注入和\u003Ccode\u003Esetter\u003C\u002Fcode\u003E方法注入，还有一种已经退出历史舞台的接口注入方式，下面就比较一下三种注入方式：\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E接口注入。从注入方式的使用上来说，接口注入是现在不甚提倡的一种方式，基本处于“退役状态”。因为它强制被注入对象实现不必要的接口，带有侵入性。而构造方法注入和\u003Ccode\u003Esetter\u003C\u002Fcode\u003E方法注入则不需要如此。\u003C\u002Fli\u003E\u003Cli\u003E构造方法注入。这种注入方式的优点就是，对象在构造完成之后，即已进入就绪状态，可以 马上使用。缺点就是，当依赖对象比较多的时候，构造方法的参数列表会比较长。而通过反射构造对象的时候，对相同类型的参数的处理会比较困难，维护和使用上也比较麻烦。而且在Java中，构造方法无法被继承，无法设置默认值。对于非必须的依赖处理，可能需要引入多个构造方法，而参数数量的变动可能造成维护上的不便。\u003C\u002Fli\u003E\u003Cli\u003E\u003Ccode\u003Esetter\u003C\u002Fcode\u003E方法注入。因为方法可以命名，所以\u003Ccode\u003Esetter\u003C\u002Fcode\u003E方法注入在描述性上要比构造方法注入好一些。 另外，\u003Ccode\u003Esetter\u003C\u002Fcode\u003E方法可以被继承，允许设置默认值，而且有良好的\u003Ccode\u003EIDE\u003C\u002Fcode\u003E支持。缺点当然就是对象无法在构造完成后马上进入就绪状态。\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E其实，这些操作都是由\u003Ccode\u003EIoC\u003C\u002Fcode\u003E容器来做的，我们所要做的，就是调用\u003Ccode\u003EIoC\u003C\u002Fcode\u003E容器来获得对象而已。\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Ch2\u003E2、IoC容器及IoC容器如何获取对象间的依赖关系\u003C\u002Fh2\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Ccode\u003ESpring\u003C\u002Fcode\u003E中提供了两种\u003Ccode\u003EIoC\u003C\u002Fcode\u003E容器：\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E \u003C\u002Fli\u003E\u003Cli\u003E\u003Ccode\u003EApplicationContext\u003C\u002Fcode\u003E \u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E这两个容器间的关系如下图：\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-cb227f19e5c0926edb0c63bbcaed9786_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"696\" data-rawheight=\"222\" class=\"origin_image zh-lightbox-thumb\" width=\"696\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-cb227f19e5c0926edb0c63bbcaed9786_r.jpg\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;696&#39; height=&#39;222&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"696\" data-rawheight=\"222\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"696\" data-original=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-cb227f19e5c0926edb0c63bbcaed9786_r.jpg\" data-actualsrc=\"https:\u002F\u002Fpic3.zhimg.com\u002Fv2-cb227f19e5c0926edb0c63bbcaed9786_b.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp\u003E\u003Cbr\u002F\u003E我们可以看到，\u003Ccode\u003EApplicationContext\u003C\u002Fcode\u003E是\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E的子类，所以，\u003Ccode\u003EApplicationContext\u003C\u002Fcode\u003E可以看做更强大的\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E，他们两个之间的区别如下：\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E。基础类型\u003Ccode\u003EIoC容器\u003C\u002Fcode\u003E，提供完整的\u003Ccode\u003EIoC\u003C\u002Fcode\u003E服务支持。如果没有特殊指定，默认采用延迟初始化策略（\u003Ccode\u003Elazy-load\u003C\u002Fcode\u003E）。只有当客户端对象需要访问容器中的某个受管对象的时候，才对该受管对象进行初始化以及依赖注入操作。所以，相对来说，容器启动初期速度较快，所需要的资源有限。对于资源有限，并且功能要求不是很严格的场景，\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E是比较合适的\u003Ccode\u003EIoC容器\u003C\u002Fcode\u003E选择。\u003C\u002Fli\u003E\u003Cli\u003E\u003Ccode\u003EApplicationContext\u003C\u002Fcode\u003E。\u003Ccode\u003EApplicationContext\u003C\u002Fcode\u003E在\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E的基础上构建，是相对比较高级的容器实现，除了拥有\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E的所有支持，\u003Ccode\u003EApplicationContext\u003C\u002Fcode\u003E还提供了其他高级特性，比如事件发布、国际化信息支持等，\u003Ccode\u003EApplicationContext\u003C\u002Fcode\u003E所管理的对象，在该类型容器启动之后，默认全部初始化并绑定完成。所以，相对于\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E来说，\u003Ccode\u003EApplicationContext\u003C\u002Fcode\u003E要求更多的系统资源，同时，因为在启动时就完成所有初始化，容\u003Cbr\u002F\u003E器启动时间较之\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E也会长一些。在那些系统资源充足，并且要求更多功能的场景中，\u003Ccode\u003EApplicationContext\u003C\u002Fcode\u003E类型的容器是比较合适的选择。\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E但是我们无论使用哪个容器，我们都需要通过某种方法告诉容器关于对象依赖的信息，只有这样，容器才能合理的创造出对象，否则，容器自己也不知道哪个对象依赖哪个对象，如果胡乱注入，那不是创造出一个四不像。理论上将我们可以通过任何方式来告诉容器对象依赖的信息，比如我们可以通过语音告诉他，但是并没有人实现这样的代码，所以我们还是老老实实使用\u003Ccode\u003ESpring\u003C\u002Fcode\u003E提供的方法吧：\u003C\u002Fp\u003E\u003Cul\u003E\u003Cli\u003E通过最基本的文本文件来记录被注入对象和其依赖对象之间的对应关系\u003C\u002Fli\u003E\u003Cli\u003E通过描述性较强的XML文件格式来记录对应信息\u003C\u002Fli\u003E\u003Cli\u003E通过编写代码的方式来注册这些对应信息\u003C\u002Fli\u003E\u003Cli\u003E通过注解方式来注册这些对应信息\u003C\u002Fli\u003E\u003C\u002Ful\u003E\u003Cp\u003E虽然提供了四种方式，但是我们一般只使用\u003Ccode\u003Exml\u003C\u002Fcode\u003E文件方式和注解方式，所以，就重点讲解这两种方式。\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Ch2\u003E3、万里长征第一步：加载配置文件信息\u003C\u002Fh2\u003E\u003Cp\u003E我们在介绍了一些基本的概念后，终于要迎来容器创造对象的第一步，那就是加载配置文件信息，我们已经知道我们主要通过\u003Ccode\u003Exml\u003C\u002Fcode\u003E文件和注解的方式来告诉容器对象间的依赖信息，那么容器怎么才能从\u003Ccode\u003Exml\u003C\u002Fcode\u003E配置文件中得到对象依赖的信息呢？且听我慢慢道来。\u003Cb\u003E（这里的容器指的是\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E，至于\u003Ccode\u003EApplicationContext\u003C\u002Fcode\u003E，以后会有相应的讲解）\u003C\u002Fb\u003E\u003C\u002Fp\u003E\u003Cp\u003E在\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E容器中，每一个注入对象都对应一个\u003Ccode\u003EBeanDefinition\u003C\u002Fcode\u003E实例对象，该实例对象负责保存注入对象的所有必要信息，包括其对应的对象的class类型、是否是抽象类、构造方法参数以及其他属性等。当客户端向\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E请求相应对象的时候，\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E会通过这些信息为客户端返回一个完备可用的对象实例。\u003C\u002Fp\u003E\u003Cp\u003E那么\u003Ccode\u003EBeanDefinition\u003C\u002Fcode\u003E实例对象的信息是从哪而来呢？这里就要引出一个专门加载解析配置文件的类了，他就是\u003Ccode\u003EBeanDefinitionReader\u003C\u002Fcode\u003E，对应到\u003Ccode\u003Exml\u003C\u002Fcode\u003E配置文件，就是他的子类\u003Ccode\u003EXmlBeanDefinitionReader\u003C\u002Fcode\u003E，\u003Ccode\u003EXmlBeanDefinitionReader\u003C\u002Fcode\u003E负责读取\u003Ccode\u003ESpring\u003C\u002Fcode\u003E指定格式的\u003Ccode\u003EXML\u003C\u002Fcode\u003E配置文件并解析，之后将解析后的文件内容映射到相应的\u003Ccode\u003EBeanDefinition\u003C\u002Fcode\u003E。在我们了解了怎么得到对象依赖的信息，并知道这些信息最终保存在\u003Ccode\u003EBeanDefinition\u003C\u002Fcode\u003E之后，我们可能会想，那么容器怎么通过这些信息创造出一个可用的对象了呢？\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Ch2\u003E4、笼统讲解容器中对象的创建和获取\u003C\u002Fh2\u003E\u003Cp\u003E我们把容器创造一个对象的过程称为\u003Ccode\u003EBean的注册\u003C\u002Fcode\u003E，实现\u003Ccode\u003EBean的注册\u003C\u002Fcode\u003E的接口是\u003Ccode\u003EBeanDefinitionRegistry\u003C\u002Fcode\u003E，其实\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E只是一个接口，他定义了如何获取容器内对象的方法，我们所说的\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E容器，其实是这个接口的是实现类，但是具体的\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E实现类同时也会实现\u003Ccode\u003EBeanDefinitionRegistry\u003C\u002Fcode\u003E接口，这样我们才能通过容器注册对象和获取对象。我们通过\u003Ccode\u003EBeanDefinitionRegistry\u003C\u002Fcode\u003E的\u003Ccode\u003ErsgisterBeanDefinition(BeanDefinition beandefinition)\u003C\u002Fcode\u003E方法来进行\u003Ccode\u003EBean的注册\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\u003Cp\u003E打个比方说，\u003Ccode\u003EBeanDefinitionRegistry\u003C\u002Fcode\u003E就像图书馆的书架，所有的书是放在书架上的。虽然你还书或者借书都是跟图书馆（也就是\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E）打交道，但书架才是图书馆存放各类图书的地方。所以，书架相对于图书馆来说，就是它的\u003Ccode\u003EBeanDefinitionRegistry\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\u003Cp\u003E下面是\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E、\u003Ccode\u003EBeanDefinitionRegistry\u003C\u002Fcode\u003E以及\u003Ccode\u003EDefaultListableBeanFactory\u003C\u002Fcode\u003E（一个具体的容器）的关系图：\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cfigure data-size=\"normal\"\u003E\u003Cnoscript\u003E\u003Cimg src=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-c74db74e7f39338a447b71c1061b00f1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"683\" data-rawheight=\"214\" class=\"origin_image zh-lightbox-thumb\" width=\"683\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-c74db74e7f39338a447b71c1061b00f1_r.jpg\"\u002F\u003E\u003C\u002Fnoscript\u003E\u003Cimg src=\"data:image\u002Fsvg+xml;utf8,&lt;svg xmlns=&#39;http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg&#39; width=&#39;683&#39; height=&#39;214&#39;&gt;&lt;\u002Fsvg&gt;\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"683\" data-rawheight=\"214\" class=\"origin_image zh-lightbox-thumb lazy\" width=\"683\" data-original=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-c74db74e7f39338a447b71c1061b00f1_r.jpg\" data-actualsrc=\"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-c74db74e7f39338a447b71c1061b00f1_b.jpg\"\u002F\u003E\u003C\u002Ffigure\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp\u003E好了，我们来总结一下一个\u003Ccode\u003EBean\u003C\u002Fcode\u003E是如何注册到容器中，然后被我们获取的：\u003Cbr\u002F\u003E首先我们需要配置该\u003Ccode\u003EBean\u003C\u002Fcode\u003E的依赖信息，通常我们配置在\u003Ccode\u003Exml\u003C\u002Fcode\u003E文件中，然后我们通过\u003Ccode\u003EXmlBeanDefinitionReader\u003C\u002Fcode\u003E读取文件内容，然后将文件内容映射到相应的\u003Ccode\u003EBeanDefinition\u003C\u002Fcode\u003E，然后我们可以通过\u003Ccode\u003EBeanFactory\u003C\u002Fcode\u003E和\u003Ccode\u003EBeanDefinitionRegistry\u003C\u002Fcode\u003E的具体实现类,比如\u003Ccode\u003EDefaultListableBeanFactory\u003C\u002Fcode\u003E实现\u003Ccode\u003EBean\u003C\u002Fcode\u003E的注册和获取。这里放一段代码来演示一下这个过程：\u003C\u002Fp\u003E\u003Cdiv class=\"highlight\"\u003E\u003Cpre\u003E\u003Ccode class=\"language-text\"\u003Epublic static void main(String[] args)\n{\n    \u002F\u002F创建一个容器\n     DefaultListableBeanFactory beanRegistry = new DefaultListableBeanFactory();\n     \u002F\u002F调用方法实现Bean的注册\n     BeanFactory container = (BeanFactory)bindViaCode(beanRegistry);\n     \u002F\u002F通过容器获取对象\n     FXNewsProvider newsProvider =  (FXNewsProvider)container.getBean(&#34;djNewsProvider&#34;);\n}\npublic static BeanFactory bindViaCode(BeanDefinitionRegistry registry)\n{\n     AbstractBeanDefinition newsProvider = new RootBeanDefinition(FXNewsProvider.class,true);\n\n     AbstractBeanDefinition newsListener = new RootBeanDefinition(DowJonesNewsListener.class,true);\n\n     AbstractBeanDefinition newsPersister = new RootBeanDefinition(DowJonesNewsPersister.class,true);\n\n     \u002F\u002F 将bean定义注册到容器中\n     registry.registerBeanDefinition(&#34;djNewsProvider&#34;, newsProvider);\n     registry.registerBeanDefinition(&#34;djListener&#34;, newsListener);\n     registry.registerBeanDefinition(&#34;djPersister&#34;, newsPersister);\n     \u002F\u002F 指定依赖关系\n     \u002F\u002F 1. 可以通过构造方法注入方式\n     ConstructorArgumentValues argValues = new ConstructorArgumentValues();\n     argValues.addIndexedArgumentValue(0, newsListener);\n     argValues.addIndexedArgumentValue(1, newsPersister);\n     newsProvider.setConstructorArgumentValues(argValues);\n     \u002F\u002F 2. 或者通过setter方法注入方式\n     MutablePropertyValues propertyValues = new MutablePropertyValues();\n     propertyValues.addPropertyValue(new ropertyValue(&#34;newsListener&#34;,newsListener));\n     propertyValues.addPropertyValue(new PropertyValue(&#34;newPersistener&#34;,newsPersister));\n     newsProvider.setPropertyValues(propertyValues);\n     \u002F\u002F 绑定完成\n     return (BeanFactory)registry;\n} \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003C\u002Fdiv\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp class=\"ztext-empty-paragraph\"\u003E\u003Cbr\u002F\u003E\u003C\u002Fp\u003E\u003Cp\u003E\u003Cb\u003E第一篇博客就先讲到这里，第二篇博客将继续讲解Spring中的IoC原理\u003C\u002Fb\u003E\u003C\u002Fp\u003E","adminClosedComment":false,"topics":[{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19599516","type":"topic","id":"19599516","name":"Spring"},{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19561132","type":"topic","id":"19561132","name":"Java"},{"url":"https:\u002F\u002Fwww.zhihu.com\u002Fapi\u002Fv4\u002Ftopics\u002F19622819","type":"topic","id":"19622819","name":"Java Web"}],"voteupCount":26,"voting":0,"heavyUpStatus":"allow_heavy_up","column":{"description":"这个专栏只要是记录我看《Spring揭秘》和官方文档的一些想法，希望能帮助初学Spring的人。","canManage":false,"intro":"细致的讲解Spring。","isFollowing":false,"urlToken":"c_189111429","id":"c_189111429","articlesCount":13,"acceptSubmission":true,"title":"细说Spring","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fc_189111429","commentPermission":"all","created":1526269021,"updated":1599154588,"imageUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-e3f5e691688bfbb11ec0cdf543597ab2_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-cf8b37d31060e3a39e2af00bd5825910.jpg?source=172ae18b","uid":"696759544344244224","userType":"people","isFollowing":false,"urlToken":"jia-yifan-13-98","id":"58053e53d23066a20b93bd4491d1f666","description":"一个考上研究生的研0学生","name":"4944","isAdvertiser":false,"headline":"http:\u002F\u002Fblog.csdn.net\u002Fq982151756?ref=toolbar","gender":1,"url":"\u002Fpeople\u002F58053e53d23066a20b93bd4491d1f666","avatarUrl":"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-cf8b37d31060e3a39e2af00bd5825910_l.jpg?source=172ae18b","isOrg":false,"type":"people"},"followers":201,"type":"column"},"commentCount":2,"contributions":[{"id":1349189,"state":"accepted","type":"include","column":{"description":"这个专栏只要是记录我看《Spring揭秘》和官方文档的一些想法，希望能帮助初学Spring的人。","canManage":false,"intro":"细致的讲解Spring。","isFollowing":false,"urlToken":"c_189111429","id":"c_189111429","articlesCount":13,"acceptSubmission":true,"title":"细说Spring","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fc_189111429","commentPermission":"all","created":1526269021,"updated":1599154588,"imageUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-e3f5e691688bfbb11ec0cdf543597ab2_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-cf8b37d31060e3a39e2af00bd5825910.jpg?source=172ae18b","uid":"696759544344244224","userType":"people","isFollowing":false,"urlToken":"jia-yifan-13-98","id":"58053e53d23066a20b93bd4491d1f666","description":"一个考上研究生的研0学生","name":"4944","isAdvertiser":false,"headline":"http:\u002F\u002Fblog.csdn.net\u002Fq982151756?ref=toolbar","gender":1,"url":"\u002Fpeople\u002F58053e53d23066a20b93bd4491d1f666","avatarUrl":"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-cf8b37d31060e3a39e2af00bd5825910_l.jpg?source=172ae18b","isOrg":false,"type":"people"},"followers":201,"type":"column"}}],"isTitleImageFullScreen":false,"upvotedFollowees":[],"commercialInfo":{"isCommercial":false,"plugin":{}},"suggestEdit":{"status":false,"reason":"","tip":"","url":"","title":""},"reason":"","annotationAction":[],"canTip":false,"tipjarorsCount":0,"isLabeled":false,"hasPublishingDraft":false,"isFavorited":false,"favlistsCount":80,"isNormal":true,"status":0,"shareText":"细说Spring——IoC详解（IoC概览） - 来自知乎专栏「细说Spring」，作者: 4944 https:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F36770560 （想看更多？下载 @知乎 App：http:\u002F\u002Fweibo.com\u002Fp\u002F100404711598 ）","canComment":{"status":true,"reason":""},"mcnFpShow":-1,"isVisible":true,"isLiked":false,"likedCount":3,"visibleOnlyToAuthor":false,"hasColumn":true,"republishers":[],"isNewLinkCard":false,"emojiReaction":{"cryFaceCount":0,"cryFaceHasSet":false,"hugCount":0,"hugHasSet":false,"likeCount":3,"likeHasSet":false,"onlookerCount":0,"onlookerHasSet":false},"abParam":{"hbAnsCard":"0"}}},"columns":{"c_189111429":{"description":"这个专栏只要是记录我看《Spring揭秘》和官方文档的一些想法，希望能帮助初学Spring的人。","canManage":false,"intro":"细致的讲解Spring。","isFollowing":false,"urlToken":"c_189111429","id":"c_189111429","articlesCount":13,"acceptSubmission":true,"title":"细说Spring","url":"https:\u002F\u002Fzhuanlan.zhihu.com\u002Fc_189111429","commentPermission":"all","created":1526269021,"updated":1599154588,"imageUrl":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-e3f5e691688bfbb11ec0cdf543597ab2_720w.jpg?source=172ae18b","author":{"isFollowed":false,"avatarUrlTemplate":"https:\u002F\u002Fpic1.zhimg.com\u002Fv2-cf8b37d31060e3a39e2af00bd5825910.jpg?source=172ae18b","uid":"696759544344244224","userType":"people","isFollowing":false,"urlToken":"jia-yifan-13-98","id":"58053e53d23066a20b93bd4491d1f666","description":"一个考上研究生的研0学生","name":"4944","isAdvertiser":false,"headline":"http:\u002F\u002Fblog.csdn.net\u002Fq982151756?ref=toolbar","gender":1,"url":"\u002Fpeople\u002F58053e53d23066a20b93bd4491d1f666","avatarUrl":"https:\u002F\u002Fpic2.zhimg.com\u002Fv2-cf8b37d31060e3a39e2af00bd5825910_l.jpg?source=172ae18b","isOrg":false,"type":"people"},"followers":201,"type":"column"}},"topics":{},"roundtables":{},"favlists":{},"comments":{},"notifications":{},"ebooks":{},"activities":{},"feeds":{},"pins":{},"promotions":{},"drafts":{},"chats":{},"posts":{},"clubs":{},"clubTags":{},"zvideos":{},"zvideoContributions":{}},"currentUser":"","account":{"lockLevel":{},"unlockTicketStatus":false,"unlockTicket":null,"challenge":[],"errorStatus":false,"message":"","isFetching":false,"accountInfo":{},"urlToken":{"loading":false},"cardUserInfo":{"vipInfo":{}},"widgetList":[]},"settings":{"socialBind":null,"inboxMsg":null,"notification":{},"email":{},"privacyFlag":null,"blockedUsers":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"blockedFollowees":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"ignoredTopics":{"isFetching":false,"paging":{"pageNo":1,"pageSize":6},"data":[]},"restrictedTopics":null,"laboratory":{}},"notification":{},"people":{"profileStatus":{},"activitiesByUser":{},"answersByUser":{},"answersSortByVotesByUser":{},"answersIncludedByUser":{},"votedAnswersByUser":{},"thankedAnswersByUser":{},"voteAnswersByUser":{},"thankAnswersByUser":{},"topicAnswersByUser":{},"zvideosByUser":{},"articlesByUser":{},"articlesSortByVotesByUser":{},"articlesIncludedByUser":{},"pinsByUser":{},"questionsByUser":{},"commercialQuestionsByUser":{},"favlistsByUser":{},"followingByUser":{},"followersByUser":{},"mutualsByUser":{},"followingColumnsByUser":{},"followingQuestionsByUser":{},"followingFavlistsByUser":{},"followingTopicsByUser":{},"publicationsByUser":{},"columnsByUser":{},"allFavlistsByUser":{},"brands":null,"creationsByUser":{},"creationsSortByVotesByUser":{},"creationsFeed":{},"infinity":{},"batchUsers":{}},"env":{"ab":{"config":{"experiments":[{"expId":"launch-qa_cl_guest-2","expPrefix":"qa_cl_guest","isDynamicallyUpdated":true,"isRuntime":false,"includeTriggerInfo":false},{"expId":"launch-vd_andplay_d-2","expPrefix":"vd_andplay_d","isDynamicallyUpdated":true,"isRuntime":false,"includeTriggerInfo":false},{"expId":"launch-vd_hookupplay_an-2","expPrefix":"vd_hookupplay_an","isDynamicallyUpdated":true,"isRuntime":false,"includeTriggerInfo":false},{"expId":"launch-vd_timeguide-2","expPrefix":"vd_timeguide","isDynamicallyUpdated":true,"isRuntime":false,"includeTriggerInfo":false},{"expId":"launch-vd_video_replay-3","expPrefix":"vd_video_replay","isDynamicallyUpdated":true,"isRuntime":false,"includeTriggerInfo":false},{"expId":"launch-vd_zvideo_link-10","expPrefix":"vd_zvideo_link","isDynamicallyUpdated":true,"isRuntime":false,"includeTriggerInfo":false},{"expId":"launch-zanswer-2","expPrefix":"zanswer","isDynamicallyUpdated":false,"isRuntime":false,"includeTriggerInfo":false},{"expId":"ge_newbie3-2_v1","expPrefix":"ge_newbie3","isDynamicallyUpdated":false,"isRuntime":false,"includeTriggerInfo":false}],"params":[{"id":"show_ad","type":"Int","value":"0","chainId":"_gene_","layerId":"show_ad","key":27},{"id":"se_filter","type":"Int","value":"0","chainId":"_gene_","layerId":"2NQZ","key":363},{"id":"comment","type":"Int","value":"0","chainId":"_gene_","layerId":"comment","key":644},{"id":"account_sdk","type":"Int","value":"1","chainId":"_gene_","layerId":"account_sdk","key":810},{"id":"web_sem_ab","type":"String","value":"1","layerId":"webgw_layer_3"},{"id":"ge_entity","type":"String","value":"0","chainId":"_gene_","layerId":"gese_layer_946","key":3036},{"id":"gue_v_serial","type":"String","value":"1","layerId":"guevd_layer_695"},{"id":"ad_com_zhi","type":"Int","value":"0","chainId":"_gene_","layerId":"ad_com_zhi","key":571},{"id":"io_video_tab","type":"Int","value":"0","chainId":"_gene_","layerId":"io_video_tab","key":728},{"id":"web_heifetz_grow_ad","type":"String","value":"1","layerId":"webgw_layer_3"},{"id":"gue_goods_card","type":"String","value":"0","layerId":"gueqa_layer_1"},{"id":"gue_visit_n_artcard","type":"String","value":"1","layerId":"gueqa_layer_579"},{"id":"gue_profile_video","type":"String","value":"1","layerId":"guevd_layer_5"},{"id":"web_scl_rec","type":"String","value":"0","layerId":"webgw_layer_759"},{"id":"gue_fo_recom","type":"String","value":"0","layerId":"gueqa_layer_780"},{"id":"ge_item","type":"String","value":"0","chainId":"_gene_","layerId":"gese_layer_945","key":2971},{"id":"ge_newcard","type":"String","value":"3","chainId":"_gene_","layerId":"geus_layer_839","key":2997},{"id":"gue_sharp","type":"String","value":"1","layerId":"guevd_layer_686"},{"id":"gue_art2qa","type":"String","value":"0","layerId":"gueqa_layer_579"},{"id":"ffzix_xgdzwz","type":"Int","value":"0","layerId":"ffzix_xgdzwz"},{"id":"se_sug_exp","type":"Int","value":"0","chainId":"_gene_","layerId":"9ZDG","key":522},{"id":"se_cp_question","type":"Int","value":"0","chainId":"_gene_","layerId":"6w98","key":704},{"id":"ge_meta_ss","type":"String","value":"0","chainId":"_gene_","layerId":"gese_layer_834","key":3079},{"id":"top_test_4_liguangyi","type":"String","value":"1","chainId":"_all_","layerId":"iosus_layer_1"},{"id":"gue_vid_tab","type":"String","value":"0","layerId":"guevd_layer_900"},{"id":"creator_hot_rec","type":"Int","value":"1","layerId":"ju92"},{"id":"edu_cd1","type":"Int","value":"0","layerId":"l-l18Y"},{"id":"ge_newyanzhi","type":"String","value":"0","chainId":"_gene_","layerId":"geus_layer_1019","key":2788},{"id":"gue_video_guide","type":"String","value":"1","layerId":"guevd_layer_625"},{"id":"se_feat","type":"Int","value":"0","chainId":"_gene_","layerId":"se_feat","key":837},{"id":"web_answer_list_ad","type":"String","value":"1","layerId":"webqa_layer_4"},{"id":"ge_guess","type":"String","value":"0","chainId":"_gene_","layerId":"gese_layer_938","key":2912},{"id":"se_ffzx_jushen1","type":"String","value":"0","chainId":"_all_","layerId":"sese_layer_4"},{"id":"tp_contents","type":"String","value":"2","chainId":"_all_","layerId":"tptp_layer_627"},{"id":"ts_cardtitle","type":"Int","value":"0","layerId":"ZED7"},{"id":"gue_bulletmb","type":"String","value":"0","layerId":"guevd_layer_812"},{"id":"gue_art_ui","type":"String","value":"0","layerId":"gueqa_layer_647"},{"id":"web_answerlist_ad","type":"String","value":"0","layerId":"webqa_layer_1"},{"id":"Test_Punk","type":"Int","value":"0","layerId":"Test_Punk"},{"id":"webpImg","type":"Int","value":"1","layerId":"JnVt"},{"id":"se_fix_ebook","type":"Int","value":"0","chainId":"_gene_","layerId":"se_fix_ebook","key":103},{"id":"se_4a","type":"Int","value":"0","chainId":"_gene_","layerId":"rtiq","key":335},{"id":"ge_v_rank_v3","type":"Int","value":"0","chainId":"_gene_","layerId":"FPcB","key":581},{"id":"plus_panel","type":"Int","value":"0","chainId":"_gene_","layerId":"plus_panel","key":818},{"id":"ge_usercard1","type":"String","value":"0","chainId":"_gene_","layerId":"gese_layer_742","key":2740},{"id":"gue_playh_an","type":"String","value":"1","layerId":"guevd_layer_622"},{"id":"ge_infinity6","type":"String","value":"0","chainId":"_gene_","layerId":"gese_layer_815","key":2817},{"id":"editor","type":"Int","value":"0","layerId":"editor"},{"id":"pc_editorplugin","type":"Int","value":"0","layerId":"pc_editorplugin"},{"id":"vdox_cmt","type":"Int","value":"0","layerId":"l-9YBb"},{"id":"hwtj_bottom_btn","type":"Int","value":"1","layerId":"l-jrhg"},{"id":"se_timebox","type":"Int","value":"0","chainId":"_gene_","layerId":"se_timebox","key":689},{"id":"se_cp_answer","type":"Int","value":"0","chainId":"_gene_","layerId":"WpRW","key":705},{"id":"andserial","type":"Int","value":"0","chainId":"_gene_","layerId":"dS1I","key":711},{"id":"an_video_tab","type":"Int","value":"0","chainId":"_gene_","layerId":"an_video_tab","key":727},{"id":"gue_q_share","type":"String","value":"0","layerId":"gueqa_layer_647"},{"id":"gue_bullet_guide","type":"String","value":"发个弹幕聊聊…","layerId":"guevd_layer_0"},{"id":"zanswer","type":"Int","value":"1","layerId":"l-zanswer"},{"id":"ts_refresh","type":"Int","value":"1","layerId":"EBn6"},{"id":"hw_aa_50","type":"Int","value":"0","chainId":"_gene_","layerId":"hw_aa_50","key":362},{"id":"se_dwd_all","type":"Int","value":"0","chainId":"_gene_","layerId":"se_dwd_all","key":621},{"id":"zr_slotpaidexp","type":"String","value":"1","chainId":"_all_","layerId":"zrrec_layer_5"},{"id":"gue_bullet_second","type":"String","value":"1","layerId":"guevd_layer_1"},{"id":"ts_refresh2","type":"Int","value":"1","layerId":"heWh"},{"id":"rec_new2th","type":"Int","value":"0","chainId":"_gene_","layerId":"Hump","key":320},{"id":"ge_hard_s_ma","type":"String","value":"0","chainId":"_gene_","layerId":"geli_layer_856","key":3031},{"id":"se_mclick","type":"Int","value":"0","chainId":"_gene_","layerId":"se_mclick","key":822},{"id":"ge_relation2","type":"String","value":"1","chainId":"_gene_","layerId":"gese_layer_815","key":2796},{"id":"tp_zrec","type":"String","value":"0","chainId":"_all_","layerId":"tptp_layer_619"},{"id":"club_fn","type":"Int","value":"1","layerId":"club_fn"},{"id":"ge_emoji","type":"String","value":"0","chainId":"_gene_","layerId":"getp_layer_827","key":3209},{"id":"pf_noti_entry_num","type":"String","value":"0","chainId":"_all_","layerId":"pfus_layer_718"},{"id":"se_mixer_km","type":"Int","value":"0","chainId":"_gene_","layerId":"se_mixer_km","key":649},{"id":"rec_3th","type":"Int","value":"11","chainId":"_gene_","layerId":"pRqt","key":697},{"id":"iosserial","type":"Int","value":"0","chainId":"_gene_","layerId":"dmFM","key":714},{"id":"web_collection_guest","type":"String","value":"1","layerId":"webqa_layer_4"},{"id":"ge_sxzx","type":"String","value":"0","chainId":"_gene_","layerId":"gere_layer_990","key":3060},{"id":"xuanpinab","type":"Int","value":"0","layerId":"xuanpinab"},{"id":"ge_search_ui","type":"String","value":"1","chainId":"_gene_","layerId":"gese_layer_838","key":2898},{"id":"ge_newbie3","type":"Int","value":"1","chainId":"_gene_","layerId":"ge_newbie3","key":180},{"id":"se_zhiplus_cpc","type":"Int","value":"0","chainId":"_gene_","layerId":"se_zhiplus_cpc","key":716},{"id":"book_ebook","type":"Int","value":"0","chainId":"_gene_","layerId":"book_ebook","key":758},{"id":"ge_rec_2th","type":"String","value":"11","chainId":"_gene_","layerId":"geli_layer_965","key":3023},{"id":"gue_cdzixun","type":"String","value":"0","layerId":"gueqa_layer_3"},{"id":"ge_prf_rec","type":"String","value":"0","chainId":"_gene_","layerId":"getop_layer_991","key":3040},{"id":"test_rec","type":"Int","value":"10","layerId":"test_rec"},{"id":"se_zp_five","type":"Int","value":"0","chainId":"_gene_","layerId":"se_zp_five","key":344},{"id":"office_xp","type":"Int","value":"1111","layerId":"office_xp"},{"id":"se_prank_decay","type":"Int","value":"0","chainId":"_gene_","layerId":"se_prank_decay","key":703},{"id":"web_column_auto_invite","type":"String","value":"0","layerId":"webqa_layer_1"},{"id":"gue_zvideo_link","type":"String","value":"1","layerId":"guevd_layer_2"},{"id":"gue_video_replay","type":"String","value":"2","layerId":"guevd_layer_3"},{"id":"se_cp_post3","type":"Int","value":"0","chainId":"_gene_","layerId":"VZLx","key":706},{"id":"se_rel_rel","type":"Int","value":"0","chainId":"_gene_","layerId":"86o4","key":812},{"id":"book_kpwz","type":"Int","value":"0","chainId":"_gene_","layerId":"Zyox","key":671},{"id":"web_login","type":"String","value":"0","layerId":"webgw_layer_759"},{"id":"ge_dipin_pre","type":"String","value":"0","chainId":"_gene_","layerId":"gese_layer_1000","key":3124},{"id":"gue_andplayd","type":"String","value":"1","layerId":"guevd_layer_686"},{"id":"use_bff_profit","type":"Int","value":"0","layerId":"use_bff_profit"},{"id":"haojiakp","type":"Int","value":"0","layerId":"haojiakp"},{"id":"recnew_2th","type":"Int","value":"24","chainId":"_gene_","layerId":"l-recnew_2th","key":67},{"id":"se_cvr_boost","type":"Int","value":"0","chainId":"_gene_","layerId":"se_cvr_boost","key":183},{"id":"click_new_tb","type":"Int","value":"0","chainId":"_gene_","layerId":"1vYQ","key":422},{"id":"qap_question_author","type":"String","value":"0","chainId":"_all_","layerId":"qapqa_layer_2"},{"id":"xuanpinceshi","type":"Int","value":"0","layerId":"xuanpinceshi"},{"id":"tp_dingyue_video","type":"String","value":"0","chainId":"_all_","layerId":"tptp_layer_4"},{"id":"correct_cnn","type":"Int","value":"0","chainId":"_gene_","layerId":"correct_cnn","key":397},{"id":"se_mixer_sku","type":"Int","value":"0","chainId":"_gene_","layerId":"se_mixer_sku","key":824},{"id":"zr_expslotpaid","type":"String","value":"1","chainId":"_all_","layerId":"zrrec_layer_11"},{"id":"gue_card_test","type":"String","value":"1","layerId":"gueqa_layer_2"},{"id":"gue_repost","type":"String","value":"0","layerId":"gueqa_layer_671"},{"id":"gue_messrec","type":"String","value":"0","layerId":"gueqa_layer_769"},{"id":"ge_sug_rep","type":"String","value":"1","chainId":"_gene_","layerId":"gese_layer_1034","key":3158},{"id":"tp_topic_style","type":"String","value":"0","chainId":"_all_","layerId":"tptp_layer_4"},{"id":"meta_ebook","type":"Int","value":"0","layerId":"meta_ebook"},{"id":"km_detail_knn","type":"Int","value":"0","layerId":"l-TY59"},{"id":"pfd_newbie2","type":"Int","value":"0","chainId":"_gene_","layerId":"pfd_newbie2","key":71},{"id":"test_3","type":"Int","value":"0","chainId":"_gene_","layerId":"dABe","key":637},{"id":"ge_video","type":"String","value":"0","chainId":"_gene_","layerId":"geli_layer_856","key":2831},{"id":"ge_yuzhi_v1","type":"String","value":"1","chainId":"_gene_","layerId":"gese_layer_1029","key":3127},{"id":"userlinkv2","type":"Int","value":"0","layerId":"userlinkv2"},{"id":"h5_signin","type":"Int","value":"0","layerId":"h5_signin"},{"id":"se_images","type":"Int","value":"0","chainId":"_gene_","layerId":"ulTc","key":652},{"id":"qap_question_visitor","type":"String","value":" 0","chainId":"_all_","layerId":"qapqa_layer_2"},{"id":"pf_adjust","type":"String","value":"0","chainId":"_all_","layerId":"pfus_layer_9"},{"id":"gue_iosplay","type":"String","value":"0","layerId":"guevd_layer_810"},{"id":"pfd_newbie","type":"Int","value":"0","chainId":"_gene_","layerId":"pfd_newbie","key":63},{"id":"hw_aa_30","type":"Int","value":"0","chainId":"_gene_","layerId":"hw_aa_30","key":361},{"id":"Full_ans_fav","type":"Int","value":"0","chainId":"_gene_","layerId":"Pnd6","key":372},{"id":"se_personal_ab","type":"Int","value":"0","chainId":"_gene_","layerId":"BJ58","key":554},{"id":"se_warmup","type":"Int","value":"0","chainId":"_gene_","layerId":"zVTj","key":729},{"id":"gue_recmess","type":"String","value":"0","layerId":"gueqa_layer_795"},{"id":"web_audit_01","type":"String","value":"case1","layerId":"webre_layer_1"}],"chains":[{"chainId":"_all_"}],"encodedParams":"CoABGwBrAYQCKgPcCzsC2AKbC7ULCgLAAgcM5ApFA2ALZwBPAUUCMgO0CgELsQLBAscC1wJqAW0CQAHXCzYD7AqJDIkCuQLKAvQLUgu0AMwC9gLPC+ALWAG\u002FAsICLAOfAjQMQwC3AKYBjQE4A1YMRwB9Ag8LNwyMAj8AaQF0ASoC2QISQAAAAAEAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAsAAAEBAAALAAAAAAAAABgAAAAAAQAAAAEAAAAAAAA="},"triggers":{}},"userAgent":{"Edge":false,"IE":false,"Wechat":false,"Weibo":false,"QQ":false,"MQQBrowser":false,"Qzone":false,"Mobile":false,"Android":false,"iOS":false,"isAppleDevice":false,"Zhihu":false,"ZhihuHybrid":false,"isBot":false,"Tablet":false,"UC":false,"Sogou":false,"Qihoo":false,"Baidu":false,"BaiduApp":false,"Safari":false,"GoogleBot":false,"AndroidDaily":false,"iOSDaily":false,"WxMiniProgram":false,"BaiduMiniProgram":false,"QQMiniProgram":false,"JDMiniProgram":false,"isWebView":false,"isMiniProgram":false,"origin":"Mozilla\u002F5.0 (Windows NT 10.0; Win64; x64; rv:86.0) Gecko\u002F20100101 Firefox\u002F86.0"},"appViewConfig":{},"ctx":{"path":"\u002Fp\u002F36770560","query":{},"href":"http:\u002F\u002Fzhuanlan.zhihu.com\u002Fp\u002F36770560","host":"zhuanlan.zhihu.com"},"trafficSource":"production","edition":{"beijing":false,"baidu":false,"sogou":false,"baiduBeijing":false,"sogouBeijing":false,"sogouInput":false,"baiduSearch":false,"googleSearch":true,"miniProgram":false,"xiaomi":false},"theme":"light","enableShortcut":true,"referer":"https:\u002F\u002Fwww.google.com.hk\u002F","xUDId":"AICa4uoE8hGPTjlTKkE7yXOZkfM7FViVnEY=","mode":"ssr","conf":{},"xTrafficFreeOrigin":"","ipInfo":{"cityName":"深圳","countryName":"中国","regionName":"广东","countryCode":"CN"},"logged":false,"vars":{"passThroughHeaders":{}}},"me":{"columnContributions":[]},"label":{"recognizerLists":{}},"ecommerce":{},"comments":{"pagination":{},"collapsed":{},"reverse":{},"reviewing":{},"conversation":{},"parent":{}},"commentsV2":{"stickers":[],"commentWithPicPermission":{},"notificationsComments":{},"pagination":{},"collapsed":{},"reverse":{},"reviewing":{},"conversation":{},"conversationMore":{},"parent":{}},"pushNotifications":{"default":{"isFetching":false,"isDrained":false,"ids":[]},"follow":{"isFetching":false,"isDrained":false,"ids":[]},"vote_thank":{"isFetching":false,"isDrained":false,"ids":[]},"currentTab":"default","notificationsCount":{"default":0,"follow":0,"vote_thank":0}},"messages":{"data":{},"currentTab":"common","messageCount":0},"register":{"registerValidateSucceeded":null,"registerValidateErrors":{},"registerConfirmError":null,"sendDigitsError":null,"registerConfirmSucceeded":null},"login":{"loginUnregisteredError":false,"loginBindWechatError":false,"loginConfirmError":null,"sendDigitsError":null,"needSMSIdentify":false,"validateDigitsError":false,"loginConfirmSucceeded":null,"qrcodeLoginToken":"","qrcodeLoginScanStatus":0,"qrcodeLoginError":null,"qrcodeLoginReturnNewToken":false},"switches":{},"captcha":{"captchaNeeded":false,"captchaValidated":false,"captchaBase64String":null,"captchaValidationMessage":null,"loginCaptchaExpires":false},"sms":{"supportedCountries":[]},"chat":{"chats":{},"inbox":{"recents":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"strangers":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"friends":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"search":{"isFetching":false,"isDrained":false,"isPrevDrained":false,"result":[],"next":null,"key":null},"config":{"newCount":0,"strangerMessageSwitch":false,"strangerMessageUnread":false,"friendCount":0}},"global":{"isChatMqttExisted":false}},"emoticons":{"emoticonGroupList":[],"emoticonGroupDetail":{}},"creator":{"currentCreatorUrlToken":null,"homeData":{"recommendQuestions":[]},"tools":{"question":{"invitationCount":{"questionFolloweeCount":0,"questionTotalCount":0},"goodatTopics":[]},"customPromotion":{"itemLists":{}},"recommend":{"recommendTimes":{}}},"explore":{"academy":{"tabs":[],"article":{}}},"rights":[],"rightsStatus":{},"levelUpperLimit":10,"account":{"growthLevel":{}},"mcn":{},"applyStatus":{},"videoSupport":{},"mcnManage":{},"tasks":{},"recentlyCreated":[],"analysis":{"all":{},"answer":{},"zvideo":{},"article":{},"pin":{},"singleContent":{}},"announcement":{},"school":{"tabs":[],"contents":[],"banner":null,"entities":{}}},"answers":{"voters":{},"copyrightApplicants":{},"favlists":{},"newAnswer":{},"concernedUpvoters":{},"simpleConcernedUpvoters":{},"paidContent":{},"settings":{}},"recommendation":{"homeRecommendations":[]},"shareTexts":{},"articles":{"voters":{},"concernedUpvoters":{}},"previewPost":{},"favlists":{"relations":{}},"columns":{"voters":{}},"reward":{"answer":{},"article":{},"question":{}},"video":{"data":{},"shareVideoDetail":{},"last":{}},"topstory":{"recommend":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"follow":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"room":{"meta":{},"isFetching":false,"afterId":0,"items":[],"next":null},"followWonderful":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"sidebar":null,"announcement":{},"hotListCategories":[],"hotList":[],"guestFeeds":{"isFetching":false,"isDrained":false,"afterId":0,"items":[],"next":null},"followExtra":{"isNewUser":null,"isFetched":false,"followCount":0,"followers":[]},"hotDaily":{"data":[],"paging":{}},"hotHighlight":{"isFetching":false,"isDrained":false,"data":[],"paging":{}},"banner":{}},"readStatus":{},"column":{},"requestColumn":{"categories":[],"error":null},"articleContribution":{"contributeRequests":[],"deleteContributeIdList":[],"handledContributeIdList":[],"recommendedColumns":[],"pinnedColumns":[],"sentContributeRequestsIdList":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"c_189111429"]},"columnContribution":{"contributeRequests":[],"autoInviteEnabled":false,"recommendedContributors":[],"contributionInvitation":null},"draftHistory":{"history":{},"drafts":{}},"upload":{},"articleDraft":{"titleImage":"","titleImageSize":{},"isTitleImageFullScreen":false,"canTitleImageFullScreen":false,"title":"","titleImageUploading":false,"error":"","content":"","draftLoading":false,"updating":false,"globalLoading":false,"pendingVideo":{"resource":null,"error":null},"deleteFail":{"fail":false},"recommendTopics":[],"selectedColumn":0,"articleDisclaimers":[]},"articleDrafts":{"isDrained":false,"isLoading":false,"items":[]},"columnAutocomplete":{"users":[],"friends":[]},"columnCollection":{},"userProfit":{"permission":{"permissionStatus":{"zhiZixuan":0,"recommend":-1,"task":0,"plugin":0,"infinity":0},"visible":false}},"mcn":{"bindInfo":{},"memberCategoryList":[],"producerList":[],"categoryList":[],"lists":{},"banners":{},"protocolStatus":{"isAgreedNew":true,"isAgreedOld":true},"probationCountdownDays":0},"zvideos":{"campaigns":{},"tagoreCategory":[],"recommendations":{},"insertable":{},"recruit":{"form":{"platform":"","nickname":"","followerCount":"","domain":"","contact":""},"submited":false,"ranking":[]},"club":{},"qyActivityData":{},"batchVideos":{},"contribution":{"selectedContribution":null,"configs":{},"contributionLists":{},"recommendQuestions":{"isLoading":true,"paging":{"isEnd":false,"isStart":true,"totals":0},"data":[]},"questionSearchResults":{"isLoading":true,"paging":{"isEnd":false,"isStart":true,"totals":0},"data":[]}}},"republish":{}},"fetchHost":"www.zhihu.com","subAppName":"column"}</script><script crossorigin="" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/vendor.js"></script><script crossorigin="" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/column_004.js"></script><script src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/hm.js" async=""></script><script crossorigin="" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/zap.js"></script><script src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/push.js"></script><div><div style="display: none;">想来知乎工作？请发送邮件到 jobs@zhihu.com</div></div><div><div><div class="css-8pdeid"></div></div></div><script crossorigin="" src="%E7%BB%86%E8%AF%B4Spring%E2%80%94%E2%80%94IoC%E8%AF%A6%E8%A7%A3%EF%BC%88IoC%E6%A6%82%E8%A7%88%EF%BC%89%20-%20%E7%9F%A5%E4%B9%8E_files/emoticon.js"></script><div><div><div style="left: -1179px; top: -999px;" class="Editable-languageSuggestions"><div><div class="Popover"><label class="Editable-languageSuggestionsInput Input-wrapper"><input autocomplete="off" role="combobox" aria-expanded="false" aria-autocomplete="list" aria-activedescendant="AutoComplete15-0" id="Popover14-toggle" aria-haspopup="true" aria-owns="Popover14-content" class="Input" placeholder="选择语言"><svg class="Zi Zi--Select" fill="#afbdcf" viewBox="0 0 24 24" width="24" height="24"><path d="M12 16.183l2.716-2.966a.757.757 0 0 1 1.064.001.738.738 0 0 1 0 1.052l-3.247 3.512a.758.758 0 0 1-1.064 0L8.22 14.27a.738.738 0 0 1 0-1.052.758.758 0 0 1 1.063 0L12 16.183zm0-9.365L9.284 9.782a.758.758 0 0 1-1.064 0 .738.738 0 0 1 0-1.052l3.248-3.512a.758.758 0 0 1 1.065 0L15.78 8.73a.738.738 0 0 1 0 1.052.757.757 0 0 1-1.063.001L12 6.818z" fill-rule="evenodd"></path></svg></label></div></div></div></div></div></body></html>